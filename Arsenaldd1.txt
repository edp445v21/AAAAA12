
bit32 = {};
local N = 32;
local P = 2 ^ N;
bit32.bnot = function(x)
	x = x % P;
	return (P - 1) - x;
end;
bit32.band = function(x, y)
	if (y == 255) then
		return x % 256;
	end
	if (y == 65535) then
		return x % 65536;
	end
	if (y == 4294967295) then
		return x % 4294967296;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 2) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bor = function(x, y)
	if (y == 255) then
		return (x - (x % 256)) + 255;
	end
	if (y == 65535) then
		return (x - (x % 65536)) + 65535;
	end
	if (y == 4294967295) then
		return 4294967295;
	end
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) >= 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.bxor = function(x, y)
	x, y = x % P, y % P;
	local r = 0;
	local p = 1;
	for i = 1, N do
		local a, b = x % 2, y % 2;
		x, y = math.floor(x / 2), math.floor(y / 2);
		if ((a + b) == 1) then
			r = r + p;
		end
		p = 2 * p;
	end
	return r;
end;
bit32.lshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount < 0) then
		return math.floor(x * (2 ^ s_amount));
	else
		return (x * (2 ^ s_amount)) % P;
	end
end;
bit32.rshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		return math.floor(x * (2 ^ -s_amount));
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
bit32.arshift = function(x, s_amount)
	if (math.abs(s_amount) >= N) then
		return 0;
	end
	x = x % P;
	if (s_amount > 0) then
		local add = 0;
		if (x >= (P / 2)) then
			add = P - (2 ^ (N - s_amount));
		end
		return math.floor(x * (2 ^ -s_amount)) + add;
	else
		return (x * (2 ^ -s_amount)) % P;
	end
end;
local v0 = tonumber;
local v1 = string['byte'];
local v2 = string['char'];
local v3 = string['sub'];
local v4 = string['gsub'];
local v5 = string['rep'];
local v6 = table['concat'];
local v7 = table['insert'];
local v8 = math['ldexp'];
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table['unpack'];
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			local v83 = 0;
			while true do
				if (0 == v83) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v84 = 0;
			local v85;
			while true do
				if (v84 == 0) then
					v85 = v2(v0(v30, 16));
					if v19 then
						local v102 = v5(v85, v19);
						v19 = nil;
						return v102;
					else
						return v85;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v86 = 0;
			local v87;
			while true do
				if (v86 == ((877 - (282 + 595)) - 0)) then
					v87 = (v31 / ((5 - 3) ^ (v32 - (1 - 0)))) % ((4 - (1639 - (1523 + 114))) ^ (((v33 - 1) - (v32 - (620 - (555 + 58 + 6)))) + (932 - ((1221 - 364) + (1139 - (68 + 997))))));
					return v87 - (v87 % 1);
				end
			end
		else
			local v88 = 568 - (367 + 201);
			local v89;
			while true do
				if (v88 == 0) then
					v89 = (929 - (214 + 713)) ^ (v32 - 1);
					return (((v31 % (v89 + v89)) >= v89) and (1 + 0)) or (0 + 0);
				end
			end
		end
	end
	local function v21()
		local v34 = 1270 - (226 + 1044);
		local v35;
		while true do
			if (v34 == (0 - 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + 1;
				v34 = (27 + 91) - (32 + (1042 - (892 + 65)));
			end
			if ((1 + 0) == v34) then
				return v35;
			end
		end
	end
	local function v22()
		local v36 = 0 - 0;
		local v37;
		local v38;
		while true do
			if (v36 == (1 - 0)) then
				return (v38 * (469 - (573 - 360))) + v37;
			end
			if (v36 == (350 - (87 + (476 - 213)))) then
				v37, v38 = v1(v16, v18, v18 + (7 - 5));
				v18 = v18 + 2;
				v36 = 953 - (802 + 150);
			end
		end
	end
	local function v23()
		local v39, v40, v41, v42 = v1(v16, v18, v18 + 3);
		v18 = v18 + 3 + 1;
		return (v42 * (16778213 - (915 + 82))) + (v41 * (185570 - 120034)) + (v40 * 256) + v39;
	end
	local function v24()
		local v43 = 1138 - (116 + 1022);
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		local v49;
		while true do
			if (((5 - 3) + 0) == v43) then
				v48 = v20(v45, 27 - 6, 19 + 12);
				v49 = ((v20(v45, (958 + 261) - (1069 + 118)) == (2 - (1056 - (87 + 968)))) and -(1 - 0)) or (1 + 0);
				v43 = 4 - 1;
			end
			if (v43 == (1 + 0)) then
				v46 = (1819 - (1703 + 114)) - 1;
				v47 = (v20(v45, 792 - (368 + (1124 - (376 + 325))), 62 - 42) * ((20 - (10 + 8)) ^ (122 - 90))) + v44;
				v43 = (3904 - 3017) - (261 + 624);
			end
			if ((4 - (2 - 1)) == v43) then
				if (v48 == (442 - (416 + 26))) then
					if (v47 == ((0 + 0) - 0)) then
						return v49 * (1423 - (630 + (1792 - 999)));
					else
						local v103 = 0 + 0;
						while true do
							if (v103 == (0 - (0 + 0))) then
								v48 = 439 - (145 + 293);
								v46 = 430 - (44 + 386);
								break;
							end
						end
					end
				elseif (v48 == (3533 - (998 + 488))) then
					return ((v47 == (0 + 0)) and (v49 * ((1748 - (760 + 987)) / (0 + 0)))) or (v49 * NaN);
				end
				return v8(v49, v48 - (1795 - (201 + (1984 - (447 + 966))))) * (v46 + (v47 / ((1 + 1) ^ (142 - 90))));
			end
			if (v43 == ((0 - 0) - 0)) then
				v44 = v23();
				v45 = v23();
				v43 = 1 + 0;
			end
		end
	end
	local function v25(v50)
		local v51;
		if not v50 then
			v50 = v23();
			if (v50 == (376 - (85 + 291))) then
				return "";
			end
		end
		v51 = v3(v16, v18, (v18 + v50) - (15 - (9 + 5)));
		v18 = v18 + v50;
		local v52 = {};
		for v66 = 1, #v51 do
			v52[v66] = v2(v1(v3(v51, v66, v66)));
		end
		return v6(v52);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v53 = (function()
			return 0;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		local v59 = (function()
			return;
		end)();
		while true do
			local v68 = (function()
				return 0;
			end)();
			while true do
				if ((1 + 0) ~= v68) then
				else
					if (v53 == (1 + 1)) then
						for v104 = #"|", v23() do
							local v105 = (function()
								return v21();
							end)();
							if (v20(v105, #",", #".") ~= 0) then
							else
								local v108 = (function()
									return 560 - (306 + 254);
								end)();
								local v109 = (function()
									return;
								end)();
								local v110 = (function()
									return;
								end)();
								local v111 = (function()
									return;
								end)();
								local v112 = (function()
									return;
								end)();
								while true do
									if (v108 ~= (0 + 0)) then
									else
										local v113 = (function()
											return 0;
										end)();
										local v114 = (function()
											return;
										end)();
										while true do
											if (0 ~= v113) then
											else
												v114 = (function()
													return 0;
												end)();
												while true do
													if (v114 == 0) then
														v109 = (function()
															return 0 - 0;
														end)();
														v110 = (function()
															return nil;
														end)();
														v114 = (function()
															return 1468 - (899 + 568);
														end)();
													end
													if (v114 ~= (1 + 0)) then
													else
														v108 = (function()
															return 1;
														end)();
														break;
													end
												end
												break;
											end
										end
									end
									if (v108 ~= 2) then
									else
										while true do
											if (v109 == #".") then
												local v121 = (function()
													return 0;
												end)();
												local v122 = (function()
													return;
												end)();
												while true do
													if (v121 ~= 0) then
													else
														v122 = (function()
															return 0 - 0;
														end)();
														while true do
															if (v122 ~= 0) then
															else
																v112 = (function()
																	return {v22(),v22(),nil,nil};
																end)();
																if (v110 == (290 - (60 + 230))) then
																	local v1501 = (function()
																		return 572 - (426 + 146);
																	end)();
																	local v1502 = (function()
																		return;
																	end)();
																	while true do
																		if (0 ~= v1501) then
																		else
																			v1502 = (function()
																				return 0 + 0;
																			end)();
																			while true do
																				if (v1502 == (1456 - (282 + 1174))) then
																					v112[#"-19"] = (function()
																						return v22();
																					end)();
																					v112[#"0313"] = (function()
																						return v22();
																					end)();
																					break;
																				end
																			end
																			break;
																		end
																	end
																elseif (v110 == #"\\") then
																	v112[#"91("] = (function()
																		return v23();
																	end)();
																elseif (v110 == 2) then
																	v112[#"19("] = (function()
																		return v23() - ((813 - (569 + 242)) ^ (46 - 30));
																	end)();
																elseif (v110 ~= #"-19") then
																else
																	local v1552 = (function()
																		return 0;
																	end)();
																	while true do
																		if (v1552 == (0 + 0)) then
																			v112[#"xxx"] = (function()
																				return v23() - (2 ^ (1040 - (706 + 318)));
																			end)();
																			v112[#"xnxx"] = (function()
																				return v22();
																			end)();
																			break;
																		end
																	end
																end
																v122 = (function()
																	return 1;
																end)();
															end
															if (v122 == (1252 - (721 + 530))) then
																v109 = (function()
																	return 1273 - (945 + 326);
																end)();
																break;
															end
														end
														break;
													end
												end
											end
											if (0 ~= v109) then
											else
												local v123 = (function()
													return 0 - 0;
												end)();
												local v124 = (function()
													return;
												end)();
												while true do
													if (v123 == (0 + 0)) then
														v124 = (function()
															return 700 - (271 + 429);
														end)();
														while true do
															if (v124 ~= (0 + 0)) then
															else
																v110 = (function()
																	return v20(v105, 2, #"-19");
																end)();
																v111 = (function()
																	return v20(v105, #"0836", 6);
																end)();
																v124 = (function()
																	return 1;
																end)();
															end
															if (v124 ~= (1501 - (1408 + 92))) then
															else
																v109 = (function()
																	return #"[";
																end)();
																break;
															end
														end
														break;
													end
												end
											end
											if (v109 == 2) then
												local v125 = (function()
													return 1086 - (461 + 625);
												end)();
												while true do
													if (v125 == (1289 - (993 + 295))) then
														v109 = (function()
															return #"nil";
														end)();
														break;
													end
													if (v125 ~= 0) then
													else
														if (v20(v111, #"/", #" ") == #"{") then
															v112[2] = (function()
																return v59[v112[1 + 1]];
															end)();
														end
														if (v20(v111, 2, 1173 - (418 + 753)) == #"|") then
															v112[#"gha"] = (function()
																return v59[v112[#"xnx"]];
															end)();
														end
														v125 = (function()
															return 1 + 0;
														end)();
													end
												end
											end
											if (v109 == #"xnx") then
												if (v20(v111, #"nil", #"nil") ~= #"]") then
												else
													v112[#"0313"] = (function()
														return v59[v112[#".com"]];
													end)();
												end
												v54[v104] = (function()
													return v112;
												end)();
												break;
											end
										end
										break;
									end
									if (v108 == (1 + 0)) then
										v111 = (function()
											return nil;
										end)();
										v112 = (function()
											return nil;
										end)();
										v108 = (function()
											return 2;
										end)();
									end
								end
							end
						end
						for v106 = #"<", v23() do
							v55[v106 - #"."] = (function()
								return v28();
							end)();
						end
						return v57;
					end
					break;
				end
				if (v68 == (0 + 0)) then
					if (v53 == #"/") then
						local v98 = (function()
							return 0;
						end)();
						local v99 = (function()
							return;
						end)();
						while true do
							if (v98 ~= 0) then
							else
								v99 = (function()
									return 0;
								end)();
								while true do
									if (v99 == 1) then
										for v116 = #"\\", v58 do
											local v117 = (function()
												return 0;
											end)();
											local v118 = (function()
												return;
											end)();
											local v119 = (function()
												return;
											end)();
											local v120 = (function()
												return;
											end)();
											while true do
												if (v117 == (1 + 0)) then
													v120 = (function()
														return nil;
													end)();
													while true do
														if (v118 ~= #".") then
														else
															if (v119 == #"]") then
																v120 = (function()
																	return v21() ~= 0;
																end)();
															elseif (v119 == (531 - (406 + 123))) then
																v120 = (function()
																	return v24();
																end)();
															elseif (v119 == #"-19") then
																v120 = (function()
																	return v25();
																end)();
															end
															v59[v116] = (function()
																return v120;
															end)();
															break;
														end
														if (v118 ~= 0) then
														else
															local v393 = (function()
																return 1769 - (1749 + 20);
															end)();
															local v394 = (function()
																return;
															end)();
															while true do
																if ((0 + 0) == v393) then
																	v394 = (function()
																		return 1322 - (1249 + 73);
																	end)();
																	while true do
																		if ((0 + 0) ~= v394) then
																		else
																			v119 = (function()
																				return v21();
																			end)();
																			v120 = (function()
																				return nil;
																			end)();
																			v394 = (function()
																				return 1146 - (466 + 679);
																			end)();
																		end
																		if (v394 == 1) then
																			v118 = (function()
																				return #".";
																			end)();
																			break;
																		end
																	end
																	break;
																end
															end
														end
													end
													break;
												end
												if (v117 == (0 - 0)) then
													local v127 = (function()
														return 0;
													end)();
													while true do
														if (v127 == (0 - 0)) then
															v118 = (function()
																return 0;
															end)();
															v119 = (function()
																return nil;
															end)();
															v127 = (function()
																return 1901 - (106 + 1794);
															end)();
														end
														if (v127 == (1 + 0)) then
															v117 = (function()
																return 1 + 0;
															end)();
															break;
														end
													end
												end
											end
										end
										v57[#"91("] = (function()
											return v21();
										end)();
										v99 = (function()
											return 2;
										end)();
									end
									if (v99 ~= (5 - 3)) then
									else
										v53 = (function()
											return 2;
										end)();
										break;
									end
									if (0 == v99) then
										v58 = (function()
											return v23();
										end)();
										v59 = (function()
											return {};
										end)();
										v99 = (function()
											return 2 - 1;
										end)();
									end
								end
								break;
							end
						end
					end
					if (v53 ~= (114 - (4 + 110))) then
					else
						local v100 = (function()
							return 0;
						end)();
						local v101 = (function()
							return;
						end)();
						while true do
							if (v100 ~= (584 - (57 + 527))) then
							else
								v101 = (function()
									return 0;
								end)();
								while true do
									if (v101 == 0) then
										v54 = (function()
											return {};
										end)();
										v55 = (function()
											return {};
										end)();
										v101 = (function()
											return 1;
										end)();
									end
									if (v101 ~= (1428 - (41 + 1386))) then
									else
										v56 = (function()
											return {};
										end)();
										v57 = (function()
											return {v54,v55,nil,v56};
										end)();
										v101 = (function()
											return 2;
										end)();
									end
									if (v101 ~= (2 + 0)) then
									else
										v53 = (function()
											return #">";
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					v68 = (function()
						return 1;
					end)();
				end
			end
		end
	end
	local function v29(v60, v61, v62)
		local v63 = v60[(1 + 0) - 0];
		local v64 = v60[5 - 3];
		local v65 = v60[169 - ((475 - (260 + 93)) + 44)];
		return function(...)
			local v69 = v63;
			local v70 = v64;
			local v71 = v65;
			local v72 = v27;
			local v73 = 1 - 0;
			local v74 = -(3 - 2);
			local v75 = {};
			local v76 = {...};
			local v77 = v12("#", ...) - (1 + 0);
			local v78 = {};
			local v79 = {};
			for v90 = 0 - 0, v77 do
				if (v90 >= v71) then
					v75[v90 - v71] = v76[v90 + (66 - (30 + (80 - 45)))];
				else
					v79[v90] = v76[v90 + 1 + 0];
				end
			end
			local v80 = (v77 - v71) + (1258 - (1043 + (385 - 171)));
			local v81;
			local v82;
			while true do
				local v91 = 0;
				while true do
					if (v91 == 1) then
						if ((v82 <= (173 - (2101 - (1181 + 793)))) or (1457 < 343)) then
							if ((4058 >= 1397) and (v82 <= 22)) then
								if (v82 <= (1222 - (83 + 240 + 889))) then
									if (v82 <= (10 - 6)) then
										if (v82 <= (581 - (361 + 219))) then
											if (v82 == (320 - (53 + 267))) then
												local v129 = 0 + 0;
												local v130;
												local v131;
												while true do
													if ((932 < 2554) and (v129 == ((725 - (105 + 202)) - (15 + 398)))) then
														v79[v131 + (983 - (18 + 964))] = v130;
														v79[v131] = v130[v81[14 - 10]];
														break;
													end
													if (v129 == (2 + 0)) then
														v131 = v81[2 + 0];
														v79[v131](v79[v131 + (851 - (20 + 830))]);
														v73 = v73 + 1 + 0;
														v81 = v69[v73];
														v129 = 129 - (116 + 10);
													end
													if (v129 == (0 + 0)) then
														v130 = nil;
														v131 = nil;
														v79[v81[740 - (542 + 196)]] = v61[v81[3]];
														v73 = v73 + 1;
														v129 = 1 - 0;
													end
													if (v129 == (1 + 0)) then
														v81 = v69[v73];
														v79[v81[2]] = v79[v81[3]];
														v73 = v73 + 1;
														v81 = v69[v73];
														v129 = 2 + 0;
													end
													if (v129 == 3) then
														v79[v81[1 + 1]] = v61[v81[(6 + 1) - (814 - (352 + 458))]];
														v73 = v73 + 1;
														v81 = v69[v73];
														v79[v81[4 - 2]] = v79[v81[1554 - (1126 + 425)]][v81[409 - (118 + 287)]];
														v129 = 4;
													end
													if ((v129 == (15 - 11)) or (1620 > 3807)) then
														v73 = v73 + (1122 - (118 + 1003));
														v81 = v69[v73];
														v131 = v81[2];
														v130 = v79[v81[8 - 5]];
														v129 = 382 - (142 + 235);
													end
												end
											else
												local v132 = 0 - 0;
												local v133;
												local v134;
												while true do
													if (v132 == (2 + 5)) then
														v73 = v73 + ((3943 - 2965) - (553 + 424));
														v81 = v69[v73];
														v79[v81[3 - (2 - 1)]] = v81[3 + 0];
														v73 = v73 + 1 + 0;
														v132 = 5 + 3 + 0;
													end
													if (v132 == (1 + 0)) then
														v81 = v69[v73];
														v134 = v81[5 - 3];
														v79[v134](v13(v79, v134 + (950 - (438 + 511)) + 0, v81[6 - (1386 - (1262 + 121))]));
														v73 = v73 + (2 - 1);
														v132 = 4 - 2;
													end
													if ((v132 == (2 + 3)) or (313 > 911)) then
														v81 = v69[v73];
														v79[v81[9 - 7]] = v62[v81[756 - ((1307 - (728 + 340)) + 514)]];
														v73 = v73 + 1 + 0;
														v81 = v69[v73];
														v132 = 6;
													end
													if ((v132 == (1335 - ((2587 - (816 + 974)) + 532))) or (3015 <= 2049)) then
														v79[v81[(5 - 3) + 0]] = v79[v81[2 + (3 - 2)]][v81[9 - 5]];
														v73 = v73 + 1;
														v81 = v69[v73];
														v79[v81[1204 - (373 + 829)]] = v81[734 - (476 + 255)];
														v132 = 1137 - (369 + 761);
													end
													if (v132 == (0 + 0)) then
														v133 = nil;
														v134 = nil;
														v79[v81[2 - 0]][v81[3]] = v79[v81[7 - (342 - (163 + 176))]];
														v73 = v73 + (239 - (64 + 174));
														v132 = (2 - 1) + (0 - 0);
													end
													if (v132 == 4) then
														v73 = v73 + (1 - 0);
														v81 = v69[v73];
														v79[v81[338 - (144 + 192)]][v81[219 - (42 + 174)]] = v81[4 + 0];
														v73 = v73 + 1 + 0 + 0;
														v132 = (1813 - (1564 + 246)) + 2;
													end
													if (v132 == (1512 - ((708 - (124 + 221)) + 1141))) then
														v81 = v69[v73];
														v79[v81[1582 - (1183 + 397)]] = v81[(6 + 2) - 5];
														break;
													end
													if (v132 == ((453 - (115 + 336)) + 0)) then
														v81 = v69[v73];
														v134 = v81[2];
														v133 = v79[v81[3 + 0]];
														v79[v134 + (1976 - (1913 + (135 - 73)))] = v133;
														v132 = 2 + 1;
													end
													if (v132 == (7 - 4)) then
														v79[v134] = v133[v81[1937 - (565 + 1368)]];
														v73 = v73 + ((1 + 2) - 2);
														v81 = v69[v73];
														v79[v81[1663 - (1477 + 184)]] = {};
														v132 = 5 - 1;
													end
												end
											end
										elseif (v82 <= (2 + 0)) then
											local v135 = 856 - (564 + 292);
											local v136;
											local v137;
											while true do
												if ((8 - (49 - (45 + 1))) == v135) then
													v79[v81[5 - 3]] = v79[v81[307 - (244 + 60)]][v81[4 + 0]];
													v73 = v73 + (477 - (41 + 435));
													v81 = v69[v73];
													v135 = 1007 - (938 + 63);
												end
												if ((5 + 1) == v135) then
													v137 = v81[1 + 1];
													v136 = v79[v81[(3118 - (1282 + 708)) - (936 + 189)]];
													v79[v137 + 1 + 0] = v136;
													v135 = 1620 - (1565 + 48);
												end
												if (v135 == (0 + 0)) then
													v136 = nil;
													v137 = nil;
													v137 = v81[(2352 - (583 + 629)) - (782 + 356)];
													v135 = (45 + 223) - (176 + 91);
												end
												if (v135 == (7 - 4)) then
													v73 = v73 + (1 - (0 - 0));
													v81 = v69[v73];
													v137 = v81[1094 - (975 + 117)];
													v135 = 1879 - (157 + 1718);
												end
												if (v135 == (2 + 0)) then
													v73 = v73 + (3 - 2);
													v81 = v69[v73];
													v79[v81[6 - 4]] = v79[v81[3]];
													v135 = 1021 - (697 + 321);
												end
												if ((18 - 11) == v135) then
													v79[v137] = v136[v81[8 - 4]];
													break;
												end
												if (v135 == 1) then
													v136 = v79[v81[6 - 3]];
													v79[v137 + 1] = v136;
													v79[v137] = v136[v81[2 + 2]];
													v135 = 3 - 1;
												end
												if (((6 + 4) - 6) == v135) then
													v79[v137](v13(v79, v137 + (1228 - (322 + 905)), v81[614 - (602 + 9)]));
													v73 = v73 + (1190 - (449 + 740));
													v81 = v69[v73];
													v135 = (2047 - (943 + 227)) - (826 + 46);
												end
											end
										elseif (v82 > (950 - (245 + 702))) then
											local v395 = v81[2];
											do
												return v13(v79, v395, v395 + v81[9 - 6]);
											end
										else
											local v396 = v81[1 + 1];
											local v397 = {v79[v396](v79[v396 + 1])};
											local v398 = 0;
											for v997 = v396, v81[444 - (382 + 58)] do
												v398 = v398 + (3 - 2);
												v79[v997] = v397[v398];
											end
										end
									elseif (v82 <= 7) then
										if (v82 <= (5 + 0)) then
											local v138 = 0 - 0;
											local v139;
											while true do
												if ((v138 == 0) or (605 == 780)) then
													v139 = v81[5 - 3];
													v79[v139] = v79[v139]();
													break;
												end
											end
										elseif (v82 > 6) then
											v79[v81[2]] = v79[v81[3]][v81[2 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1207 - (902 + 303)]] = {};
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v79[v81[4 - 2]][v81[1 + 2]] = v79[v81[1694 - ((2752 - (1539 + 92)) + 569)]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[216 - (22 + 192)]][v81[686 - (483 + 200)]] = v79[v81[4]];
											v73 = v73 + (1464 - (1404 + 59));
											v81 = v69[v73];
											v79[v81[5 - 3]][v79[v81[3 - 0]]] = v79[v81[769 - (468 + 297)]];
											v73 = v73 + (563 - (334 + 228));
											v81 = v69[v73];
											v79[v81[(1952 - (706 + 1240)) - 4]] = v61[v81[3]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[5 - 2]][v81[4]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[238 - (141 + (353 - (81 + 177)))]][v79[v81[3 + 0]]] = v79[v81[4]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v73 = v81[3];
										else
											local v414 = 0 - 0;
											local v415;
											local v416;
											while true do
												if (v414 == (1 + 0)) then
													for v1503 = v415 + (2 - 1), v81[3 + 0] do
														v7(v416, v79[v1503]);
													end
													break;
												end
												if ((1196 > 312) and (v414 == (0 + 0))) then
													v415 = v81[2 - 0];
													v416 = v79[v415];
													v414 = 1 + 0;
												end
											end
										end
									elseif ((v82 <= (171 - (92 + 71))) or (983 == 3300)) then
										v79[v81[1 + 1]] = v81[4 - 1];
									elseif (v82 > 9) then
										v79[v81[767 - (574 + (539 - 348))]] = v62[v81[(260 - (212 + 45)) + 0]];
									else
										v79[v81[2]][v79[v81[7 - 4]]] = v79[v81[3 + 1]];
									end
								elseif (v82 <= (865 - (254 + 595))) then
									if (v82 <= (139 - (55 + 71))) then
										if (v82 <= 11) then
											v79[v81[2 - 0]] = v79[v81[1793 - (573 + 1217)]] * v81[13 - 9];
										elseif ((v82 > ((1979 - (708 + 1238)) - 21)) or (1831 <= 547)) then
											local v421;
											local v422;
											v79[v81[2]][v81[1 + 2]] = v79[v81[1 + 3]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v422 = v81[941 - (714 + 225)];
											v79[v422](v13(v79, v422 + 1, v81[8 - 5]));
											v73 = v73 + ((1 + 0) - 0);
											v81 = v69[v73];
											v422 = v81[1 + 1];
											v421 = v79[v81[3 - 0]];
											v79[v422 + 1] = v421;
											v79[v422] = v421[v81[810 - (118 + 688)]];
											v73 = v73 + (49 - (25 + 23));
											v81 = v69[v73];
											v79[v81[1 + 1]] = {};
											v73 = v73 + (1887 - (927 + 959));
											v81 = v69[v73];
											v79[v81[6 - 4]][v81[735 - (16 + 716)]] = v81[7 - (1670 - (586 + 1081))];
											v73 = v73 + (98 - (11 + 86));
											v81 = v69[v73];
											v79[v81[2]][v81[514 - (348 + 163)]] = v81[9 - 5];
										else
											local v437 = 285 - (175 + 110);
											while true do
												if ((4 - 2) == v437) then
													v79[v81[9 - 7]][v81[3]] = v81[1800 - (503 + 1293)];
													v73 = v73 + (2 - 1);
													v81 = v69[v73];
													v437 = 3 + 0 + 0;
												end
												if ((4973 > 1380) and (v437 == ((1345 - (215 + 65)) - (810 + 251)))) then
													v73 = v81[(7 - 4) + (1859 - (1541 + 318))];
													break;
												end
												if (v437 == 0) then
													v79[v81[1 + 1]][v81[3 + 0]] = v81[537 - (43 + 490)];
													v73 = v73 + 1;
													v81 = v69[v73];
													v437 = 734 - (711 + 22);
												end
												if ((v437 == (3 - 2)) or (700 < 506)) then
													v79[v81[861 - (240 + 550 + 69)]] = v79[v81[1 + 2]][v81[5 - (1 + 0)]];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v437 = 1746 - (1344 + 400);
												end
												if ((408 - (255 + 150)) == v437) then
													v79[v81[2 + 0]] = v81[3];
													v73 = v73 + 1 + 0;
													v81 = v69[v73];
													v437 = 4;
												end
											end
										end
									elseif ((3592 == 3592) and (v82 <= (59 - 45))) then
										v79[v81[(5 + 1) - 4]][v81[1742 - (404 + 1335)]] = v81[410 - (183 + 223)];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[2 + 0]][v81[(1752 - (1036 + 714)) + 1]] = v81[(225 + 116) - (10 + 181 + 146)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[(1282 - (883 + 397)) + 0]] = v61[v81[341 - (118 + 220)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[451 - (108 + (931 - (563 + 27)))]] = v79[v81[2 + 1]][v81[16 - 12]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1495 - (711 + 782)]][v81[5 - 2]] = v79[v81[473 - (270 + 199)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1821 - (580 + 1239)]] = v81[8 - 5];
									elseif (v82 > (15 + (0 - 0))) then
										v79[v81[2]] = {};
									else
										local v439 = 1986 - (1369 + 617);
										local v440;
										local v441;
										local v442;
										local v443;
										while true do
											if ((533 == 533) and (v439 == 1)) then
												v74 = (v442 + v440) - (1 + 0);
												v443 = 0 + 0;
												v439 = 2;
											end
											if (v439 == (1487 - (85 + 1402))) then
												v440 = v81[4 - 2];
												v441, v442 = v72(v79[v440](v13(v79, v440 + 1 + 0, v81[3])));
												v439 = 1168 - (645 + 522);
											end
											if (v439 == (1792 - (1010 + 780))) then
												for v1504 = v440, v74 do
													v443 = v443 + 1 + 0;
													v79[v1504] = v441[v443];
												end
												break;
											end
										end
									end
								elseif (v82 <= (90 - 71)) then
									if ((v82 <= ((17 + 32) - 32)) or (790 <= 756)) then
										local v156 = 1836 - (1045 + 791);
										while true do
											if (v156 == (2 - 1)) then
												v79[v81[2]] = v79[v81[3]][v81[5 - 1]];
												v73 = v73 + (506 - (351 + 154));
												v81 = v69[v73];
												v156 = 1576 - (1281 + 293);
											end
											if (v156 == (270 - (28 + 238))) then
												v79[v81[4 - 2]] = v79[v81[1562 - (1381 + 178)]][v81[4 + 0]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v156 = 3 + (4 - 2);
											end
											if (v156 == (0 - 0)) then
												v79[v81[2 + 0]] = v62[v81[3]];
												v73 = v73 + (471 - (381 + 89));
												v81 = v69[v73];
												v156 = 1 + 0;
											end
											if ((234 < 3849) and (v156 == ((407 - (274 + 129)) + 1))) then
												if v79[v81[(219 - (12 + 205)) - 0]] then
													v73 = v73 + 1;
												else
													v73 = v81[3];
												end
												break;
											end
											if (v156 == ((1057 + 101) - (1074 + 82))) then
												for v1151 = v81[7 - 5], v81[6 - (3 + 0)] do
													v79[v1151] = nil;
												end
												v73 = v73 + ((2169 - (27 + 357)) - (214 + 1570));
												v81 = v69[v73];
												v156 = 483 - (91 + 389);
											end
											if (v156 == 3) then
												v79[v81[1457 - (990 + 465)]] = v61[v81[2 + (298 - (90 + 207))]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v156 = 4;
											end
										end
									elseif ((3613 == 3613) and (v82 > (18 + 0 + 0))) then
										local v444;
										v79[v81[(868 - (706 + 155)) - 5]] = v79[v81[(3524 - (730 + 1065)) - (1668 + 58)]][v81[4]];
										v73 = v73 + (627 - (512 + 114));
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[5 - 2];
										v73 = v73 + ((1566 - (1339 + 224)) - (2 + 0));
										v81 = v69[v73];
										v444 = v81[1 + 1];
										v79[v444] = v79[v444](v79[v444 + 1 + 0 + 0]);
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[6 - 4]] = v79[v81[(2972 - 975) - (109 + 1885)]];
										v73 = v73 + (1470 - (1269 + 200));
										v81 = v69[v73];
										v79[v81[3 - 1]] = v61[v81[818 - (98 + (1560 - (268 + 575)))]];
										v73 = v73 + (827 - (802 + 24));
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[3]][v81[4 - 0]];
										v73 = v73 + (1295 - (919 + 375)) + 0;
										v81 = v69[v73];
										v79[v81[2]][v81[3 + 0]] = v79[v81[1 + 3]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[5 - 3]][v81[9 - 6]] = v81[2 + 2];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]][v81[3 + 0]] = v81[3 + 1];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1435 - (797 + 636)]] = v81[3];
									else
										v79[v81[9 - 7]] = v79[v81[3]][v79[v81[4]]];
									end
								elseif (v82 <= (1639 - (1427 + 192))) then
									local v157;
									local v158;
									local v159;
									local v160;
									v79[v81[5 - 3]] = v61[v81[(973 - (180 + 791)) + 1]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v160 = v81[(1807 - (323 + 1482)) + 0];
									v159 = v79[v81[2 + 1]];
									v79[v160 + (327 - (192 + 134))] = v159;
									v79[v160] = v159[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1278 - (316 + 960)]] = v61[v81[2 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3 + 0]][v81[15 - 11]];
									v73 = v73 + (552 - (83 + (2386 - (1177 + 741))));
									v81 = v69[v73];
									v79[v81[1808 - (1202 + 604)]] = v79[v81[13 - 10]][v79[v81[6 - 2]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[327 - (45 + 280)]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v160 = v81[2 + 0 + 0];
									v158 = {v79[v160](v13(v79, v160 + 1 + 0, v81[1 + 2]))};
									v157 = 0 - 0;
									for v379 = v160, v81[1915 - (340 + 1571)] do
										local v380 = 0 + 0;
										while true do
											if ((2794 < 3857) and (v380 == (1772 - (1733 + 39)))) then
												v157 = v157 + (2 - 1);
												v79[v379] = v158[v157];
												break;
											end
										end
									end
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1036 - (125 + 909)]] = v79[v81[1951 - (1096 + 852)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[514 - (409 + 103)]] = v81[239 - ((172 - 126) + 74 + 116)];
								elseif ((4809 > 1993) and (v82 == (116 - (51 + 44)))) then
									local v468 = 0 + 0;
									local v469;
									while true do
										if (((0 - 0) == v468) or (4255 <= 1075)) then
											v469 = v81[2];
											v79[v469](v13(v79, v469 + (1318 - (1114 + 203)), v81[729 - (228 + 498)]));
											break;
										end
									end
								else
									local v470;
									local v471, v472;
									local v473;
									local v474;
									v79[v81[2]] = v62[v81[3]];
									v73 = v73 + 1 + 0 + 0;
									v81 = v69[v73];
									v79[v81[(111 - (96 + 13)) + 0]] = v62[v81[666 - (174 + (2410 - (962 + 959)))]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v474 = v81[5 - 3];
									v473 = v79[v81[1908 - ((2073 - 1243) + 1075)]];
									v79[v474 + (525 - (303 + 221))] = v473;
									v79[v474] = v473[v81[1 + 3]];
									v73 = v73 + (1270 - (231 + (2389 - (461 + 890))));
									v81 = v69[v73];
									v79[v81[2 + 0 + 0]] = v81[1165 - (171 + 991)];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v474 = v81[5 - 3];
									v471, v472 = v72(v79[v474](v13(v79, v474 + 1, v81[3])));
									v74 = (v472 + v474) - ((7 - 5) - 1);
									v470 = (243 - (19 + 224)) + 0;
									for v1015 = v474, v74 do
										local v1016 = 0 - 0;
										while true do
											if (v1016 == (0 - 0)) then
												v470 = v470 + (1 - 0);
												v79[v1015] = v471[v470];
												break;
											end
										end
									end
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v474 = v81[(1133 + 117) - (111 + 1137)];
									v79[v474] = v79[v474](v13(v79, v474 + 1, v74));
									v73 = v73 + (159 - (91 + 67));
									v81 = v69[v73];
									v474 = v81[5 - 3];
									v79[v474] = v79[v474]();
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v474 = v81[525 - (423 + 100)];
									v473 = v79[v81[1 + 2]];
									v79[v474 + 1] = v473;
									v79[v474] = v473[v81[10 - 6]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[773 - (326 + 445)]][v81[13 - 10]] = v81[4];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[4 - 2]][v81[714 - (530 + (379 - (37 + 161)))]] = v81[4];
									v73 = v73 + (882 - (614 + 97 + 170));
									v81 = v69[v73];
									v79[v81[(14 + 20) - (19 + 13)]][v81[4 - 1]] = v81[(9 + 0) - (66 - (60 + 1))];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[926 - (826 + 97)]] = v81[6 - (2 + 0)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v474 = v81[1814 - (1293 + 519)];
									v79[v474] = v79[v474](v13(v79, v474 + (1 - 0), v81[3]));
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v474 = v81[3 - 1];
									v473 = v79[v81[12 - 9]];
									v79[v474 + (2 - 1)] = v473;
									v79[v474] = v473[v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = {};
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]][v81[3]] = v81[1 + 3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + (3 - 2)]][v81[(3 - 1) + 1]] = v81[1100 - (709 + 387)];
									v73 = v73 + (1859 - (673 + 1185));
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[9 - 6]] = v81[4];
									v73 = v73 + (686 - (375 + 310));
									v81 = v69[v73];
									v79[v81[2 - 0]][v81[3 + 0]] = v81[3 + 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v474 = v81[2];
									v79[v474](v13(v79, v474 + (1 - 0), v81[1 + (2001 - (1864 + 135))]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v474 = v81[2];
									v473 = v79[v81[5 - 2]];
									v79[v474 + (1881 - ((1150 - 704) + 1434))] = v473;
									v79[v474] = v473[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + (1284 - (1040 + 243));
									v81 = v69[v73];
									v79[v81[2]][v81[8 - 5]] = v81[1851 - (559 + 1288)];
									v73 = v73 + (1932 - (609 + 1322));
									v81 = v69[v73];
									v79[v81[456 - (13 + 441)]][v81[10 - 7]] = v81[10 - 6];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[2]][v81[1 + 2]] = v81[14 - 10];
									v73 = v73 + 1 + 0 + 0;
									v81 = v69[v73];
									v474 = v81[1 + 1 + 0];
									v79[v474] = v79[v474](v13(v79, v474 + 1, v81[8 - 5]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v474 = v81[2 + 0];
									v473 = v79[v81[4 - 1]];
									v79[v474 + 1 + (0 - 0)] = v473;
									v79[v474] = v473[v81[3 + (1132 - (314 + 817))]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + 1 + 0 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[436 - (153 + 280)]] = v81[11 - 7];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + (215 - (32 + 182))]][v81[2 + 1]] = v81[4 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]][v81[2 + 1 + 0]] = v81[671 - (89 + 578)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v474 = v81[2];
									v79[v474] = v79[v474](v13(v79, v474 + 1 + 0, v81[5 - 2]));
									v73 = v73 + (1050 - ((1999 - 1427) + 477));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v62[v81[(67 - (39 + 26)) + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[89 - (84 + 2)]][v81[6 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v62[v81[845 - (497 + 345)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v474 = v81[1 + (145 - (54 + 90))];
									v473 = v79[v81[3]];
									v79[v474 + (1334 - ((803 - (45 + 153)) + 728))] = v473;
									v79[v474] = v473[v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[2 + 1];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v474 = v81[7 - 5];
									v79[v474] = v79[v474](v13(v79, v474 + (553 - (457 + 95)), v81[3 + 0]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v62[v81[3 + 0]];
									v73 = v73 + (490 - (457 + 32));
									v81 = v69[v73];
									v474 = v81[1 + 1];
									v473 = v79[v81[1405 - (832 + 570)]];
									v79[v474 + 1 + 0] = v473;
									v79[v474] = v473[v81[2 + 2]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v81[799 - (588 + 208)];
									v73 = v73 + (2 - (1 + 0));
									v81 = v69[v73];
									v474 = v81[1802 - (884 + 916)];
									v79[v474] = v79[v474](v13(v79, v474 + 1, v81[6 - (6 - 3)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[655 - (232 + 421)]] = v62[v81[1892 - (1569 + 320)]];
									v73 = v73 + 1 + (0 - 0);
									v81 = v69[v73];
									v474 = v81[(3 - 2) + 1];
									v473 = v79[v81[9 - (3 + 3)]];
									v79[v474 + 1] = v473;
									v79[v474] = v473[v81[609 - (316 + 289)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[1 + (6 - 4)];
									v73 = v73 + (1454 - ((2010 - 1344) + 787));
									v81 = v69[v73];
									v474 = v81[427 - (360 + 65)];
									v79[v474] = v79[v474](v13(v79, v474 + 1 + 0, v81[3]));
									v73 = v73 + (255 - (79 + 175));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[4 - 1]][v81[4 + 0]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v474 = v81[2];
									v473 = v79[v81[5 - 2]];
									v79[v474 + 1] = v473;
									v79[v474] = v473[v81[903 - (503 + 396)]];
									v73 = v73 + (182 - (92 + 89));
									v81 = v69[v73];
									v474 = v81[3 - 1];
									v79[v474] = v79[v474](v79[v474 + 1 + 0]);
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[7 - (753 - (485 + 263))]] = {};
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v81[(708 - (575 + 132)) + 2]] = v81[8 - 4];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + (861 - (750 + 111))]][v81[3]] = v81[2 + 2];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[3]] = v81[(1011 - (445 + 565)) + 3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v81[4 - 1]] = v81[(1005 + 243) - (485 + 759)];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[(1 + 3) - (2 - 0)]][v81[(398 + 794) - (442 + 747)]] = v81[1139 - (832 + 303)];
									v73 = v73 + (947 - (88 + 858));
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[(313 - (189 + 121)) + 0]] = v81[1 + 3];
									v73 = v73 + (790 - (766 + 23));
									v81 = v69[v73];
									v79[v81[9 - 7]][v81[3]] = v81[5 - 1];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[4 - (1 + 1)]] = v62[v81[10 - 7]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1075 - (1036 + 37)]] = v79[v81[1350 - (634 + 713)]][v81[3 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[3 + (538 - (493 + 45))];
									v73 = v73 + (1481 - (641 + 839));
									v81 = v69[v73];
									v79[v81[915 - (910 + (971 - (493 + 475)))]] = v81[3];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[(431 + 1255) - (1466 + 218)]] = v81[3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v474 = v81[1 + (785 - (158 + 626))];
									v79[v474] = v79[v474](v13(v79, v474 + (1149 - (556 + 592)), v81[2 + 1]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[810 - (329 + 479)]][v81[857 - (174 + 680)]] = v79[v81[13 - 9]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[742 - (396 + 343)]] = v81[1 + 3];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1479 - (14 + 15 + 1448)]] = v62[v81[1392 - (135 + 1254)]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[9 - 7]] = v79[v81[(2 - 0) + 1]][v81[1531 - (389 + 1138)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[576 - (102 + 472)]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[3 + 0];
									v73 = v73 + (1546 - (320 + 67 + 1158));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v81[2 + 1];
									v73 = v73 + (1465 - (157 + 1307));
									v81 = v69[v73];
									v474 = v81[1861 - (821 + 1038)];
									v79[v474] = v79[v474](v13(v79, v474 + (2 - (1092 - (1035 + 56))), v81[1 + 2]));
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[7 - 4]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1028 - ((1793 - (114 + 845)) + 192)]][v81[1 + 2]] = v81[2 + 2];
									v73 = v73 + 1 + 0 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v62[v81[3]];
									v73 = v73 + (305 - (300 + 4));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[365 - (112 + 250)];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[(6 + 1) - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + (1049 - (179 + 870))]] = v81[3 + 0];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v474 = v81[2 + 0];
									v79[v474] = v79[v474](v13(v79, v474 + 1, v81[(1987 - 570) - (1001 + 413)]));
								end
							elseif (v82 <= (75 - 41)) then
								if ((3468 == 3468) and (v82 <= (906 - (827 + 51)))) then
									if ((v82 <= (907 - (244 + 638))) or (4782 < 195)) then
										if (v82 <= (716 - ((1657 - 1030) + 66))) then
											do
												return;
											end
										elseif (v82 == 24) then
											do
												return v79[v81[(3 + 2) - 3]];
											end
										else
											v79[v81[604 - ((985 - (95 + 378)) + 90)]] = v61[v81[(139 + 1770) - (1665 + 241)]];
											v73 = v73 + (718 - (373 + 344));
											v81 = v69[v73];
											v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[10 - 6]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2 - 0]][v81[3]] = v79[v81[1103 - (35 + 1064)]];
											v73 = v73 + 1 + (0 - 0);
											v81 = v69[v73];
											v79[v81[2]] = v79[v81[3]][v81[4]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v61[v81[6 - (3 + 0)]];
											v73 = v73 + (1012 - (334 + 677)) + 0;
											v81 = v69[v73];
											v79[v81[1238 - (298 + 938)]] = v79[v81[1262 - (233 + 1026)]][v81[1670 - (636 + (3856 - 2826))]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]][v81[1 + 2]] = v79[v81[1 + 3]];
											v73 = v73 + (222 - (55 + (1222 - (1049 + 7))));
											v81 = v69[v73];
											v73 = v81[3];
										end
									elseif (v82 <= ((26 - 20) + 20)) then
										local v184 = 0 + (0 - 0);
										while true do
											if (v184 == 1) then
												v79[v81[2]] = v62[v81[11 - (3 + 5)]];
												v73 = v73 + (298 - (36 + 261));
												v81 = v69[v73];
												v184 = 3 - 1;
											end
											if (v184 == (1372 - (34 + 1334))) then
												if ((765 <= 3541) and (v79[v81[1 + (2 - 1)]] == v79[v81[4]])) then
													v73 = v73 + 1;
												else
													v73 = v81[3 + 0];
												end
												break;
											end
											if (v184 == (1286 - (1035 + 248))) then
												v79[v81[23 - (20 + 1)]] = v79[v81[3]][v81[(5 - 2) + 1 + 0]];
												v73 = v73 + (320 - (134 + 185));
												v81 = v69[v73];
												v184 = 1137 - ((1969 - (1004 + 416)) + 584);
											end
											if (v184 == 0) then
												v79[v81[687 - (314 + 371)]] = v79[v81[3]][v81[4]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v184 = 969 - (478 + (2447 - (1621 + 336)));
											end
											if (v184 == (2 + 0)) then
												v79[v81[1174 - (786 + 386)]] = v79[v81[9 - 6]][v81[1383 - (1055 + 324)]];
												v73 = v73 + (1341 - (1093 + 247));
												v81 = v69[v73];
												v184 = 3 + 0;
											end
										end
									elseif (v82 == ((1942 - (337 + 1602)) + (1541 - (1014 + 503)))) then
										local v615;
										local v616;
										local v617;
										v79[v81[7 - 5]] = v79[v81[9 - 6]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2]] = v62[v81[7 - 4]];
										v73 = v73 + (1016 - (446 + 569)) + 0;
										v81 = v69[v73];
										v79[v81[7 - 5]] = {};
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[(1 + 6) - 4];
										v73 = v73 + (689 - (364 + 324));
										v81 = v69[v73];
										v79[v81[2]] = v81[7 - 4];
										v73 = v73 + (2 - (2 - 1));
										v81 = v69[v73];
										v79[v81[2]] = v81[3];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2]] = v81[12 - 9];
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[1271 - (1249 + 19)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[7 - 5]] = v81[3];
										v73 = v73 + ((366 + 721) - (686 + 400));
										v81 = v69[v73];
										v617 = v81[2 + 0];
										v616 = v79[v617];
										v615 = v81[232 - (73 + 156)];
										for v1029 = (1 - 0) + 0, v615 do
											v616[v1029] = v79[v617 + v1029];
										end
									else
										local v633 = v81[814 - (721 + 90)];
										local v634 = v79[v633];
										for v1032 = v633 + 1 + 0, v81[12 - 8] do
											v634 = v634 .. v79[v1032];
										end
										v79[v81[2]] = v634;
									end
								elseif (v82 <= (501 - (5 + 219 + 246))) then
									if ((v82 <= (46 - 17)) or (3947 < 1151)) then
										local v185 = 0 - 0;
										local v186;
										local v187;
										while true do
											if (v185 == (1 + 0)) then
												v79[v187](v13(v79, v187 + (506 - (223 + 282)) + 0, v81[3]));
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v187 = v81[3 - 1];
												v186 = v79[v81[3]];
												v79[v187 + (3 - 2)] = v186;
												v185 = 515 - (6 + 197 + 310);
											end
											if (v185 == (1995 - (1238 + (1202 - 447)))) then
												v79[v187] = v186[v81[(1 - 0) + 3]];
												v73 = v73 + (1535 - (709 + (1495 - (623 + 47))));
												v81 = v69[v73];
												v79[v81[2]] = {};
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v185 = 3 - 0;
											end
											if (v185 == (869 - (196 + 668))) then
												v79[v81[7 - 5]] = v62[v81[5 - 2]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[835 - (171 + 662)]] = v79[v81[96 - (4 + 89)]][v81[13 - 9]];
												break;
											end
											if (v185 == (2 + 2)) then
												v79[v81[8 - 6]][v81[2 + (46 - (32 + 13))]] = v81[1490 - (35 + 1451)];
												v73 = v73 + (1454 - (28 + 1425));
												v81 = v69[v73];
												v79[v81[1995 - (941 + 1052)]][v81[3 + 0]] = v81[1518 - (822 + 388 + 304)];
												v73 = v73 + (1 - (0 + 0));
												v81 = v69[v73];
												v185 = 3 + 2;
											end
											if ((1787 <= 2297) and (v185 == (297 - (45 + 252)))) then
												v186 = nil;
												v187 = nil;
												v79[v81[(1803 - (1070 + 731)) + 0]][v81[3]] = v79[v81[2 + 2 + 0]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v187 = v81[4 - 2];
												v185 = 434 - (114 + 319);
											end
											if (v185 == (3 - 0)) then
												v79[v81[2]][v81[3 - 0]] = v81[3 + 1];
												v73 = v73 + (1 - 0);
												v81 = v69[v73];
												v79[v81[1406 - (1257 + 147)]][v81[3]] = v81[8 - 4];
												v73 = v73 + (1964 - (221 + 335 + 1407));
												v81 = v69[v73];
												v185 = 1210 - (741 + 465);
											end
										end
									elseif (v82 > (495 - (170 + 295))) then
										if not v79[v81[(3 - 1) + 0]] then
											v73 = v73 + (134 - (98 + 35)) + 0;
										else
											v73 = v81[7 - 4];
										end
									else
										v79[v81[2]][v81[3]] = v81[4 + 0];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[(518 + 715) - ((3389 - 2432) + 273)]][v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[7 - 5]][v81[7 - 4]] = v81[11 - 7];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[9 - 7]] = v81[1783 - (389 + 1391)];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v73 = v81[1 + 2];
									end
								elseif (v82 <= 32) then
									v79[v81[2]] = v79[v81[6 - 3]][v81[955 - (783 + 168)]];
								elseif (v82 > (110 - (259 - 182))) then
									v79[v81[2]] = v79[v81[3 + 0]] + v79[v81[315 - (309 + 2)]];
								elseif (v79[v81[5 - 3]] or (525 > 2824)) then
									v73 = v73 + (1213 - (1090 + 115 + 7));
								else
									v73 = v81[1 + 2];
								end
							elseif ((v82 <= (134 - 94)) or (2497 <= 1948)) then
								if (v82 <= (33 + 4)) then
									if (v82 <= (24 + 11)) then
										v79[v81[2]] = v79[v81[1121 - (628 + 490)]] / v81[1 + 3];
									elseif (v82 > (88 - (23 + 29))) then
										v79[v81[9 - (564 - (395 + 162))]] = v79[v81[777 - (380 + 51 + 343)]] - v79[v81[4]];
									else
										local v648 = 0 - 0;
										while true do
											if (v648 == (5 - (1944 - (816 + 1125)))) then
												v79[v81[2]] = v79[v81[3]][v81[4]];
												v73 = v73 + (1 - 0) + 0;
												v81 = v69[v73];
												v648 = 3;
											end
											if ((1 + (1151 - (701 + 447))) == v648) then
												if (v79[v81[1697 - (556 + 1139)]] == v79[v81[4]]) then
													v73 = v73 + 1;
												else
													v73 = v81[(27 - 9) - (6 + 9)];
												end
												break;
											end
											if ((3779 == 3779) and ((0 + 0) == v648)) then
												v79[v81[2 + 0]] = v79[v81[3]][v81[4]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v648 = (297 - 127) - (28 + 141);
											end
											if (v648 == (2 + 1)) then
												v79[v81[2]] = v79[v81[3]][v81[4 - 0]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v648 = (2662 - (391 + 950)) - (486 + 831);
											end
											if ((2 - 1) == v648) then
												v79[v81[6 - 4]] = v62[v81[(2 - 1) + 2]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v648 = 1265 - (668 + 595);
											end
										end
									end
								elseif ((542 == 542) and (v82 <= ((87 - 52) + 3))) then
									local v191 = v81[2];
									local v192 = v79[v191];
									local v193 = v81[3];
									for v381 = 1 + 0, v193 do
										v192[v381] = v79[v191 + v381];
									end
								elseif (v82 == 39) then
									local v649 = 0 - 0;
									local v650;
									local v651;
									while true do
										if (v649 == (296 - (23 + 267))) then
											v79[v81[1946 - (1129 + 815)]] = v81[3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[2]] = v81[390 - (371 + 16)];
											break;
										end
										if (v649 == (1750 - (1326 + 424))) then
											v650 = nil;
											v651 = nil;
											v79[v81[3 - 1]][v81[10 - (17 - 10)]] = v79[v81[122 - (62 + 26 + 30)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v649 = 772 - (720 + 51);
										end
										if ((v649 == 4) or (4176 < 3120)) then
											v81 = v69[v73];
											v79[v81[4 - 2]] = v62[v81[3]];
											v73 = v73 + ((6497 - 4720) - (421 + 1355));
											v81 = v69[v73];
											v79[v81[2 - 0]] = v79[v81[2 + 1]][v81[1087 - (286 + 797)]];
											v649 = 5;
										end
										if ((v649 == (10 - 7)) or (4670 <= 692)) then
											v79[v81[2 - 0]] = {};
											v73 = v73 + (440 - (397 + 42));
											v81 = v69[v73];
											v79[v81[1 + 1]][v81[803 - (24 + 776)]] = v81[4];
											v73 = v73 + (1 - 0);
											v649 = 4;
										end
										if (v649 == 2) then
											v650 = v79[v81[788 - (222 + 563)]];
											v79[v651 + (1 - 0)] = v650;
											v79[v651] = v650[v81[3 + 1]];
											v73 = v73 + (191 - (23 + 167));
											v81 = v69[v73];
											v649 = 3;
										end
										if (v649 == (1799 - ((2212 - (251 + 1271)) + 1108))) then
											v651 = v81[2];
											v79[v651](v13(v79, v651 + 1 + 0, v81[3 + 0]));
											v73 = v73 + ((756 + 93) - (40 + 808));
											v81 = v69[v73];
											v651 = v81[1 + 1];
											v649 = 7 - 5;
										end
										if (v649 == (5 + 0)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v81[574 - (47 + 524)];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v649 = 6;
										end
									end
								else
									v79[v81[5 - 3]][v81[4 - 1]] = v81[4];
								end
							elseif ((1534 >= 1131) and (v82 <= 43)) then
								if ((v82 <= (93 - 52)) or (73 == 610)) then
									local v194 = 1726 - (1165 + 561);
									local v195;
									local v196;
									while true do
										if (v194 == 8) then
											v79[v196] = v195[v81[4]];
											break;
										end
										if ((1 + 5) == v194) then
											v79[v81[(15 - 9) - 4]] = v79[v81[(4 - 2) + 1]][v81[483 - (341 + 138)]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v194 = 14 - 7;
										end
										if ((v194 == 7) or (1400 > 1854)) then
											v196 = v81[328 - (89 + 237)];
											v195 = v79[v81[9 - 6]];
											v79[v196 + 1] = v195;
											v194 = 16 - (13 - 5);
										end
										if ((v194 == ((2142 - (1147 + 112)) - (581 + 300))) or (2836 >= 3349)) then
											v73 = v73 + ((306 + 915) - (855 + 365));
											v81 = v69[v73];
											v79[v81[4 - 2]] = v79[v81[3]] / v81[2 + 2];
											v194 = 1238 - (1030 + 205);
										end
										if ((v194 == (5 + (0 - 0))) or (4095 == 963)) then
											v79[v81[2 + 0]][v81[(76 + 213) - (156 + 130)]] = v79[v81[8 - 4]];
											v73 = v73 + (698 - (335 + 362));
											v81 = v69[v73];
											v194 = 9 - 3;
										end
										if (v194 == (1 - 0)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[2 + 0]] = v79[v81[72 - (10 + 59)]][v81[2 + 0 + 2]];
											v194 = 9 - 7;
										end
										if (v194 == 4) then
											v79[v196] = v79[v196](v13(v79, v196 + (1164 - (671 + 492)), v81[3 + 0]));
											v73 = v73 + ((1830 - 614) - (369 + 846));
											v81 = v69[v73];
											v194 = 5;
										end
										if ((4849 >= 4402) and ((1 + 2) == v194)) then
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v196 = v81[2];
											v194 = 1949 - (1036 + 909);
										end
										if (((0 + 0) == v194) or (3772 <= 1370)) then
											v195 = nil;
											v196 = nil;
											v79[v81[(5 - 3) - (0 - 0)]] = v79[v81[206 - (11 + (934 - 742))]][v81[3 + (2 - 1)]];
											v194 = 176 - (135 + 40);
										end
									end
								elseif (v82 > (101 - 59)) then
									if (v79[v81[2]] < v79[v81[3 + 1]]) then
										v73 = v73 + (2 - 1);
									else
										v73 = v81[4 - (567 - (237 + 329))];
									end
								else
									local v654 = 176 - (50 + 126);
									while true do
										if ((2770 < 3538) and (v654 == (2 - 1))) then
											v79[v81[2]] = v79[v81[1 + 2]][v81[1417 - (1233 + 180)]];
											v73 = v73 + (970 - (522 + 447));
											v81 = v69[v73];
											v654 = 1423 - (107 + 1314);
										end
										if (v654 == (0 + 0)) then
											v79[v81[2]][v81[8 - 5]] = v79[v81[(7 - 5) + 2]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v654 = 3 - 2;
										end
										if (v654 == 5) then
											v79[v81[2]][v81[1913 - (716 + 1194)]] = v81[1 + 3];
											v73 = v73 + 1;
											v81 = v69[v73];
											v654 = 1 + 5;
										end
										if ((v654 == ((335 + 172) - (41 + 33 + 429))) or (3283 <= 304)) then
											v79[v81[3 - 1]][v81[2 + 1]] = v81[8 - 4];
											v73 = v73 + 1 + (1124 - (408 + 716));
											v81 = v69[v73];
											v654 = 15 - 10;
										end
										if (v654 == ((26 - 19) - 4)) then
											v79[v81[2]][v81[436 - (279 + 154)]] = v81[782 - (454 + 324)];
											v73 = v73 + 1;
											v81 = v69[v73];
											v654 = 4 + 0;
										end
										if (v654 == 2) then
											v79[v81[19 - (12 + 5)]][v81[2 + 1]] = v79[v81[4]];
											v73 = v73 + (2 - 1);
											v81 = v69[v73];
											v654 = 2 + 1;
										end
										if ((205 < 1318) and (v654 == (1101 - (277 + 816)))) then
											v79[v81[8 - 6]] = v79[v81[1186 - (1058 + 125)]][v81[(822 - (344 + 477)) + 3]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v654 = 984 - (815 + 160);
										end
										if (v654 == (25 - 19)) then
											v79[v81[(1 + 3) - 2]] = v62[v81[3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v654 = 20 - 13;
										end
										if (v654 == (1905 - (41 + 1857))) then
											v79[v81[2]] = v79[v81[1896 - ((2983 - (1188 + 573)) + 671)]][v81[10 - 6]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v654 = 1190 - (229 + 953);
										end
										if (v654 == (1783 - (1111 + 663))) then
											v79[v81[1581 - (874 + 705)]] = v79[v81[(2 - 1) + 2 + 0]][v81[3 + 1]];
											break;
										end
									end
								end
							elseif (v82 <= (90 - 46)) then
								v79[v81[1 + 1]] = v79[v81[682 - (642 + 37)]][v81[1 + (9 - 6)]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[(2 - 1) + 1]] = v61[v81[7 - 4]];
								v73 = v73 + (455 - (233 + 221));
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[3 + 0]][v79[v81[1545 - (718 + 823)]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[2]] = v61[v81[808 - (266 + 539)]];
								v73 = v73 + (1530 - (508 + 1021));
								v81 = v69[v73];
								v79[v81[5 - 3]] = v79[v81[1228 - (636 + 589)]][v81[9 - 5]];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[2 + 0]] = v61[v81[2 + 1]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[(956 + 61) - (657 + (1524 - (228 + 938)))]] = v79[v81[7 - 4]][v79[v81[8 - (689 - (332 + 353))]]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1189 - (1151 + 36)]] = v81[3];
							elseif (v82 == (44 + 1)) then
								local v655;
								v79[v81[1 + 1]] = v79[v81[8 - 5]][v81[1836 - (1552 + 280)]];
								v73 = v73 + (835 - (64 + 770));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v81[6 - 3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[(1516 - 271) - ((411 - 254) + 1086)]] = v79[v81[5 - 2]];
								v73 = v73 + ((4 + 0) - (2 + 1));
								v81 = v69[v73];
								v655 = v81[2];
								v79[v655] = v79[v655](v13(v79, v655 + (1 - 0), v81[3 - 0]));
								v73 = v73 + (820 - (599 + 220));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1934 - (1813 + 118)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1219 - (841 + 376)]] = v62[v81[3 - 0]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[8 - (19 - 14)]][v81[863 - (464 + 395)]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[2 + 1]][v81[841 - ((890 - (18 + 405)) + 370)]];
								v73 = v73 + (1 - (0 + 0));
								v81 = v69[v73];
								v79[v81[2 + 0]][v81[(6 + 4) - 7]] = v79[v81[1 + 3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v79[v81[522 - (150 + 370)]] = v62[v81[1285 - (74 + 1208)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[4 - 2]] = v79[v81[14 - 11]][v81[3 + 1]];
								v73 = v73 + (391 - (14 + 376));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[2 + 1]][v79[v81[4 + 0]]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[5 - (3 - 0)]][v81[3 + 0]] = v79[v81[4]];
								v73 = v73 + (79 - (23 + 55));
								v81 = v69[v73];
								v79[v81[4 - 2]][v81[3 + 0]] = v81[4 + 0];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v81[3];
							else
								local v684;
								local v685;
								local v686;
								v79[v81[903 - (652 + 249)]] = v62[v81[7 - 4]];
								v73 = v73 + (1869 - (708 + 1160));
								v81 = v69[v73];
								v79[v81[2]] = v81[8 - (983 - (194 + 784))];
								v73 = v73 + (1 - 0);
								v81 = v69[v73];
								v79[v81[29 - (10 + 17)]] = v62[v81[1 + 2]];
								v73 = v73 + (1733 - (1400 + 332));
								v81 = v69[v73];
								v79[v81[3 - 1]] = v79[v81[1911 - (242 + 1666)]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v686 = v81[1 + 1];
								v79[v686] = v79[v686](v79[v686 + 1 + 0]);
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v685 = v81[943 - (850 + 90)];
								v684 = v79[v685];
								for v1082 = v685 + ((1771 - (694 + 1076)) - 0), v81[1394 - (360 + 1030)] do
									v684 = v684 .. v79[v1082];
								end
								v79[v81[2 + (1904 - (122 + 1782))]] = v684;
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v686 = v81[2 - 0];
								v79[v686](v79[v686 + 1]);
								v73 = v73 + (1662 - (856 + 53 + 752));
								v81 = v69[v73];
								do
									return;
								end
							end
						elseif (v82 <= 69) then
							if (v82 <= (1280 - (109 + 1114))) then
								if (v82 <= (93 - 42)) then
									if (v82 <= (19 + 29)) then
										if ((v82 > (289 - (6 + 236))) or (2701 <= 2035)) then
											if (v81[2 + 0] == v79[v81[4 + 0]]) then
												v73 = v73 + (2 - 1);
											else
												v73 = v81[4 - 1];
											end
										else
											local v214;
											local v215;
											local v214, v216;
											local v217;
											local v218;
											v79[v81[1135 - (1076 + 57)]] = v62[v81[1 + 2]];
											v73 = v73 + 1;
											v81 = v69[v73];
											v218 = v81[2];
											v217 = v79[v81[692 - (579 + 110)]];
											v79[v218 + 1 + 0] = v217;
											v79[v218] = v217[v81[4 + 0]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v218 = v81[(382 + 27) - (174 + 233)];
											v214, v216 = v72(v79[v218](v79[v218 + (2 - 1)]));
											v74 = (v216 + v218) - (1 - 0);
											v215 = 0 + 0;
											for v384 = v218, v74 do
												local v385 = 0;
												while true do
													if (v385 == (1174 - (663 + 511))) then
														v215 = v215 + 1 + 0;
														v79[v384] = v214[v215];
														break;
													end
												end
											end
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v218 = v81[2 + 0];
											v214 = {v79[v218](v13(v79, v218 + 1, v74))};
											v215 = 0 + 0 + 0;
											for v386 = v218, v81[(26 - 17) - 5] do
												local v387 = 0 - 0;
												while true do
													if (v387 == (0 + 0 + 0)) then
														v215 = v215 + (1 - 0);
														v79[v386] = v214[v215];
														break;
													end
												end
											end
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v73 = v81[1 + 2];
										end
									elseif ((v82 <= (771 - (478 + (2214 - (214 + 1756))))) or (473 > 761)) then
										local v230 = 517 - (440 + 77);
										local v231;
										while true do
											if ((((14 - 11) + 2) == v230) or (1438 == 3376)) then
												v79[v231] = v79[v231](v13(v79, v231 + (3 - 2), v81[3]));
												v73 = v73 + (1557 - (73 + 582 + 901));
												v81 = v69[v73];
												v79[v81[1 + 1]][v81[3 + 0 + 0]] = v79[v81[3 + 1]];
												v230 = (609 - (217 + 368)) - 18;
											end
											if (v230 == (1448 - (695 + 750))) then
												v81 = v69[v73];
												v79[v81[6 - 4]] = v81[3 - 0];
												v73 = v73 + ((8 - 5) - 2);
												v81 = v69[v73];
												v230 = 355 - (188 + 97 + 66);
											end
											if ((v230 == 4) or (1848 > 3551)) then
												v79[v81[2]] = v81[6 - 3];
												v73 = v73 + (1311 - (682 + 628));
												v81 = v69[v73];
												v231 = v81[1 + 1];
												v230 = 304 - (176 + 123);
											end
											if ((v230 == (0 + 0)) or (4811 <= 1337)) then
												v231 = nil;
												v79[v81[2 + 0]] = v62[v81[272 - (239 + 23 + 7)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v230 = 1;
											end
											if (v230 == (1 + 0)) then
												v79[v81[2]] = v79[v81[(1 + 3) - 1]][v81[4]];
												v73 = v73 + (2 - (890 - (844 + 45)));
												v81 = v69[v73];
												v79[v81[(601 - (242 + 42)) - (306 + 9)]] = v81[10 - 7];
												v230 = 1 + 1;
											end
											if (v230 == (2 + 0)) then
												v73 = v73 + 1;
												v81 = v69[v73];
												v79[v81[1 + 1]] = v81[8 - 5];
												v73 = v73 + (1376 - (1140 + 235));
												v230 = 2 + 1;
											end
											if (v230 == (6 + 0)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[54 - (33 + (37 - 18))]] = v81[3];
												break;
											end
										end
									elseif (v82 == (19 + 31)) then
										local v703 = 0 - 0;
										local v704;
										while true do
											if (v703 == 0) then
												v704 = v81[1 + 1];
												v79[v704](v79[v704 + (1 - 0)]);
												break;
											end
										end
									else
										local v705 = 0;
										local v706;
										while true do
											if ((6 + 0) == v705) then
												v79[v81[2]] = v79[v81[(1608 - 916) - (586 + 103)]] - v79[v81[1 + 3]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1490 - (1309 + 179)]] = v79[v81[3]][v81[(1206 - (132 + 1068)) - 2]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v705 = 4 + (4 - 1);
											end
											if ((2 - 1) == v705) then
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[5 - (1625 - (214 + 1409))]][v81[7 - 3]];
												v73 = v73 + (610 - (295 + 314));
												v81 = v69[v73];
												v79[v81[4 - 2]] = v61[v81[3]];
												v73 = v73 + 1;
												v705 = (1520 + 444) - (1300 + 662);
											end
											if (v705 == (9 - 6)) then
												v73 = v73 + (1756 - (1178 + 577));
												v81 = v69[v73];
												v79[v81[2]] = v62[v81[2 + 1]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[1407 - (851 + 554)]] = v79[v81[3 + 0]][v81[10 - 6]];
												v705 = 8 - 4;
											end
											if ((v705 == (306 - (115 + 187))) or (813 > 4547)) then
												v73 = v73 + (1635 - (497 + 1137)) + 0;
												v81 = v69[v73];
												v79[v81[(942 - (9 + 931)) + 0]] = v79[v81[3]][v81[4]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[291 - (181 + 108)]] = v79[v81[(694 + 470) - (160 + 1001)]][v81[4]];
												v705 = 5 + 0;
											end
											if (v705 == (12 - 7)) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v706 = v81[2];
												v79[v706] = v79[v706](v13(v79, v706 + ((2 - 1) - 0), v81[361 - (237 + 121)]));
												v73 = v73 + (898 - (525 + 372));
												v81 = v69[v73];
												v705 = 6;
											end
											if (v705 == 2) then
												v81 = v69[v73];
												v79[v81[3 - 1]] = v79[v81[9 - 6]][v81[146 - (96 + 46)]];
												v73 = v73 + (778 - (643 + 32 + 102));
												v81 = v69[v73];
												v706 = v81[1 + 1];
												v79[v706] = v79[v706](v13(v79, v706 + 1, v81[6 - 3]));
												v705 = 11 - (5 + 3);
											end
											if ((v705 == (0 + 0)) or (55 == 4077)) then
												v706 = nil;
												v79[v81[3 - 1]] = v79[v81[5 - 2]][v81[723 - (316 + (879 - (296 + 180)))]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[5 - 3]] = v61[v81[2 + 1]];
												v73 = v73 + 1;
												v705 = 2 - 1;
											end
											if ((5 + 2) == v705) then
												if (v79[v81[1 + 1]] < v79[v81[13 - 9]]) then
													v73 = v73 + 1;
												else
													v73 = v81[14 - 11];
												end
												break;
											end
										end
									end
								elseif (v82 <= (111 - 57)) then
									if ((2452 < 3645) and (v82 <= (3 + 49))) then
										if (v79[v81[3 - 1]] ~= v79[v81[1 + 3]]) then
											v73 = v73 + (2 - (1404 - (1183 + 220)));
										else
											v73 = v81[20 - (12 + 5)];
										end
									elseif (v82 > (1318 - (1037 + 228))) then
										local v708 = 0;
										local v709;
										local v710;
										local v711;
										local v712;
										local v713;
										while true do
											if (v708 == (3 - 2)) then
												v713 = nil;
												v79[v81[3 - (1 - 0)]] = v61[v81[3]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v708 = 3 - 1;
											end
											if ((9 - 5) == v708) then
												v74 = (v711 + v713) - (1 + 0);
												v710 = 0;
												for v1509 = v713, v74 do
													local v1510 = 1973 - (1656 + 317);
													while true do
														if (v1510 == (0 + 0)) then
															v710 = v710 + 1 + 0;
															v79[v1509] = v709[v710];
															break;
														end
													end
												end
												v73 = v73 + (2 - 1);
												v708 = (69 - 45) - 19;
											end
											if (5 == v708) then
												v81 = v69[v73];
												v713 = v81[356 - (5 + (1192 - 843))];
												v709 = {v79[v713](v13(v79, v713 + (4 - 3), v74))};
												v710 = 1271 - (266 + 1005);
												v708 = 4 + (736 - (527 + 207));
											end
											if ((4644 < 4686) and (v708 == ((533 - (187 + 340)) - 4))) then
												v713 = v81[(1872 - (1298 + 572)) - 0];
												v712 = v79[v81[1699 - (561 + 1135)]];
												v79[v713 + (1 - 0)] = v712;
												v79[v713] = v712[v81[4]];
												v708 = 3;
											end
											if (v708 == (19 - 13)) then
												for v1511 = v713, v81[1070 - ((1260 - 753) + 559)] do
													local v1512 = 0 - (170 - (144 + 26));
													while true do
														if (v1512 == 0) then
															v710 = v710 + (2 - 1);
															v79[v1511] = v709[v710];
															break;
														end
													end
												end
												v73 = v73 + 1;
												v81 = v69[v73];
												v73 = v81[9 - (13 - 7)];
												break;
											end
											if ((2221 >= 2202) and (v708 == 3)) then
												v73 = v73 + ((140 + 249) - ((577 - 365) + 176));
												v81 = v69[v73];
												v713 = v81[907 - (250 + 655)];
												v709, v711 = v72(v79[v713](v79[v713 + (2 - 1)]));
												v708 = 6 - 2;
											end
											if (v708 == (0 - 0)) then
												v709 = nil;
												v710 = nil;
												v709, v711 = nil;
												v712 = nil;
												v708 = 1957 - (1869 + 87);
											end
										end
									else
										v73 = v81[10 - 7];
									end
								elseif ((3622 <= 4280) and (v82 <= 55)) then
									local v232;
									local v233;
									v79[v81[4 - 2]][v81[1904 - (484 + 1417)]] = v79[v81[8 - 4]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v233 = v81[775 - (48 + 725)];
									v79[v233](v13(v79, v233 + ((4 - 3) - 0), v81[7 - 4]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v233 = v81[2 + 0];
									v232 = v79[v81[7 - (3 + 1)]];
									v79[v233 + 1] = v232;
									v79[v233] = v232[v81[2 + 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[855 - (152 + (951 - 250))]] = {};
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1313 - (430 + 881)]][v81[2 + 1]] = v81[4];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[897 - (557 + 338)]][v81[1 + 2]] = v81[10 - 6];
								elseif (v82 > 56) then
									v79[v81[6 - 4]]();
								else
									local v715;
									v79[v81[4 - 2]] = v79[v81[6 - 3]][v81[4]];
									v73 = v73 + (802 - (499 + 302));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[869 - (15 + 24 + 827)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v715 = v81[4 - 2];
									v79[v715] = v79[v715](v79[v715 + (3 - 2)]);
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[1 + 2]];
									v73 = v73 + ((204 - (5 + 197)) - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[4 - 1]][v81[(794 - (339 + 347)) - ((232 - 129) + 1)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[(1957 - 1401) - (475 + 79)]][v81[6 - 3]] = v79[v81[4]];
									v73 = v73 + (3 - 2);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v61[v81[3 + 0]];
									v73 = v73 + (1504 - (1395 + 108));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[3]][v81[1208 - (7 + 1197)]];
									v73 = v73 + (377 - (365 + 11)) + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[322 - (27 + 292)]] = v79[v81[11 - 7]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[8 - 6]][v81[5 - (2 + 0)]] = v81[6 - 2];
									v73 = v73 + (140 - (43 + 96));
									v81 = v69[v73];
									v79[v81[8 - 6]] = v81[6 - 3];
								end
							elseif (v82 <= (53 + (38 - 28))) then
								if (v82 <= (140 - 80)) then
									if (v82 <= (17 + 41)) then
										local v248 = 0 - 0;
										local v249;
										while true do
											if (v248 == ((924 - (837 + 87)) + (0 - 0))) then
												v249 = v81[(1673 - (837 + 833)) - 1];
												v79[v249] = v79[v249](v13(v79, v249 + 1, v74));
												break;
											end
										end
									elseif ((2034 > 984) and (v82 > 59)) then
										local v738 = 0 + 0;
										local v739;
										while true do
											if (v738 == (0 + 0 + 0)) then
												v739 = nil;
												v79[v81[2]] = v81[(3141 - (356 + 1031)) - (1414 + 337)];
												v73 = v73 + (1941 - (1642 + 298));
												v81 = v69[v73];
												v79[v81[2]] = v79[v81[3]];
												v73 = v73 + (2 - 1);
												v738 = 2 - 1;
											end
											if (((8 + 9) - 11) == v738) then
												v79[v739](v13(v79, v739 + 1 + 0, v81[(1649 - (73 + 1573)) + 0]));
												v73 = v73 + (973 - (357 + 615));
												v81 = v69[v73];
												v73 = v81[3];
												break;
											end
											if ((3 + 0) == v738) then
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2 + 0]] = v79[v81[3]];
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v79[v81[2 + 0]] = v62[v81[1 + 2]];
												v738 = 3 + (1389 - (1307 + 81));
											end
											if ((3966 >= 570) and (v738 == (1306 - (384 + 917)))) then
												v73 = v73 + (698 - (128 + (803 - (7 + 227))));
												v81 = v69[v73];
												v79[v81[(2537 - 992) - (1407 + 136)]] = v79[v81[1890 - (687 + 1200)]];
												v73 = v73 + 1;
												v81 = v69[v73];
												v739 = v81[1712 - (556 + (1320 - (90 + 76)))];
												v738 = 20 - 14;
											end
											if (v738 == (96 - (9 + 86))) then
												v81 = v69[v73];
												v79[v81[423 - (275 + 146)]] = v79[v81[3]];
												v73 = v73 + (3 - 2);
												v81 = v69[v73];
												v79[v81[1 + 1]] = v61[v81[67 - (29 + 35)]];
												v73 = v73 + (4 - 3);
												v738 = (3 + 2) - (3 + 0);
											end
											if (v738 == (17 - (11 + 2))) then
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v79[v81[1014 - (53 + 959)]] = v79[v81[3]][v81[412 - (312 + (375 - 279))]];
												v73 = v73 + (261 - (197 + 63));
												v81 = v69[v73];
												v79[v81[3 - 1]] = v79[v81[288 - (147 + 138)]];
												v738 = 904 - (813 + 86);
											end
											if ((v738 == (2 + 0)) or (3151 <= 1857)) then
												v81 = v69[v73];
												v79[v81[(1 + 2) - 1]] = v79[v81[3]][v81[496 - (18 + 474)]];
												v73 = v73 + 1 + 0;
												v81 = v69[v73];
												v739 = v81[6 - 4];
												v79[v739] = v79[v739](v13(v79, v739 + (1087 - (860 + 226)), v81[3]));
												v738 = (73 + 233) - (121 + 182);
											end
										end
									else
										v79[v81[1 + 1]] = v79[v81[1243 - (516 + 472 + 252)]];
									end
								elseif (v82 <= (7 + 54)) then
									if (v79[v81[1 + 1]] == v79[v81[1974 - (49 + 1921)]]) then
										v73 = v73 + (891 - (223 + 667));
									else
										v73 = v81[55 - (51 + 1)];
									end
								elseif (v82 > (106 - 44)) then
									local v743 = 0 - (0 + 0);
									local v744;
									while true do
										if (v743 == (1125 - (146 + 979))) then
											v744 = v81[1 + 1];
											v79[v744] = v79[v744](v79[v744 + 1]);
											break;
										end
									end
								else
									v79[v81[607 - (311 + 294)]] = v61[v81[3]];
								end
							elseif (v82 <= (183 - 117)) then
								if (v82 <= (28 + 36)) then
									local v250 = v81[1445 - (496 + 947)];
									local v251 = {};
									for v388 = 1359 - (1233 + (156 - 31)), #v78 do
										local v389 = v78[v388];
										for v747 = 0, #v389 do
											local v748 = 0 + 0;
											local v749;
											local v750;
											local v751;
											while true do
												if ((2671 == 2671) and (v748 == ((1369 - (618 + 751)) + 0))) then
													v749 = v389[v747];
													v750 = v749[1 + 0];
													v748 = 1 + 0;
												end
												if (v748 == (1646 - (963 + 682))) then
													v751 = v749[2];
													if ((515 == 515) and (v750 == v79) and (v751 >= v250)) then
														local v1528 = 0 + 0;
														while true do
															if (0 == v1528) then
																v251[v751] = v750[v751];
																v749[1] = v251;
																break;
															end
														end
													end
													break;
												end
											end
										end
									end
								elseif ((v82 > (1569 - (504 + 1000))) or (1095 <= 551)) then
									v79[v81[2 + 0]] = v81[3 + 0] / v79[v81[4]];
								else
									local v753;
									local v754;
									v79[v81[1 + 1]][v81[4 - 1]] = v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v754 = v81[2 + 0];
									v79[v754](v13(v79, v754 + 1 + 0, v81[185 - (156 + 26)]));
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v754 = v81[2 - 0];
									v753 = v79[v81[167 - (149 + (1925 - (206 + 1704)))]];
									v79[v754 + (961 - (890 + 70))] = v753;
									v79[v754] = v753[v81[121 - (39 + 78)]];
									v73 = v73 + (483 - (14 + 468));
									v81 = v69[v73];
									v79[v81[4 - 2]] = {};
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]][v81[3]] = v81[3 + 1];
									v73 = v73 + 1 + (0 - 0);
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[2 + 1]] = v81[2 + 2];
								end
							elseif ((v82 <= ((253 - 126) - 60)) or (3357 <= 583)) then
								local v252 = v81[2 + 0];
								v79[v252] = v79[v252](v13(v79, v252 + (3 - 2), v81[1 + 1 + 1]));
							elseif ((2125 < 2531) and (v82 == 68)) then
								local v769 = v81[2];
								local v770, v771 = v72(v79[v769](v79[v769 + (52 - (12 + (1314 - (155 + 1120))))]));
								v74 = (v771 + v769) - (1 + 0);
								local v772 = (1506 - (396 + 1110)) - 0;
								for v1110 = v769, v74 do
									local v1111 = 0 - 0;
									while true do
										if ((v1111 == 0) or (1969 >= 4826)) then
											v772 = v772 + 1;
											v79[v1110] = v770[v772];
											break;
										end
									end
								end
							else
								local v773 = 0;
								local v774;
								local v775;
								while true do
									if ((1 + (2 - 1)) == v773) then
										v79[v775] = v774[v81[2 + 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[4 - 2]] = v81[2 + 1];
										v773 = 14 - 11;
									end
									if ((4128 > 3875) and (v773 == (1711 - (1596 + 114)))) then
										v81 = v69[v73];
										v775 = v81[2];
										v774 = v79[v81[7 - 4]];
										v79[v775 + (714 - (164 + 549))] = v774;
										v773 = 1440 - (1059 + 379);
									end
									if (v773 == 0) then
										v774 = nil;
										v775 = nil;
										v79[v81[2 - 0]] = v79[v81[2 + 1 + 0]][v81[1 + 3 + 0]];
										v73 = v73 + 1;
										v773 = 393 - (145 + 247);
									end
									if (v773 == (3 + 0)) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v775 = v81[5 - 3];
										v79[v775] = v79[v775](v13(v79, v775 + 1 + 0, v81[3 + 0]));
										v773 = 4;
									end
									if (v773 == 4) then
										v73 = v73 + (1 - 0);
										v81 = v69[v73];
										if v79[v81[722 - (254 + 466)]] then
											v73 = v73 + 1;
										else
											v73 = v81[563 - (544 + 16)];
										end
										break;
									end
								end
							end
						elseif ((1313 <= 4596) and (v82 <= 81)) then
							if ((v82 <= (238 - 163)) or (4153 == 939)) then
								if (v82 <= (700 - (294 + (1310 - (230 + 746))))) then
									if (v82 <= (323 - (236 + 17))) then
										if (v81[2] < v79[v81[4]]) then
											v73 = v73 + (602 - (473 + 128)) + 0;
										else
											v73 = v81[3 + 0];
										end
									elseif (v82 == ((315 - (39 + 9)) - (462 - (38 + 228)))) then
										local v777;
										v79[v81[2]] = v62[v81[14 - 11]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3 + 0]][v81[798 - (413 + (691 - 310))]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v61[v81[5 - 2]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[7 - 4]][v81[4]];
										v73 = v73 + ((2444 - (106 + 367)) - (52 + 530 + 1388));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]][v81[6 - 2]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[366 - (326 + 38)]] = v61[v81[3]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[623 - (47 + 573)]][v81[2 + 2]];
										v73 = v73 + (4 - 3);
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[3]][v79[v81[5 - 1]]];
										v73 = v73 + (1665 - ((3131 - (354 + 1508)) + 395));
										v81 = v69[v73];
										v79[v81[494 - (76 + 416)]] = v79[v81[446 - (319 + 124)]][v81[9 - 5]];
										v73 = v73 + ((3234 - 2226) - (564 + 443));
										v81 = v69[v73];
										v777 = v81[5 - 3];
										v79[v777] = v79[v777](v13(v79, v777 + 1, v81[461 - (337 + 89 + 32)]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[6 - 4]][v81[3]] = v79[v81[(1123 + 792) - ((1695 - 434) + 650)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v73 = v81[3 - 0];
									else
										local v799 = 1817 - (772 + 1045);
										local v800;
										local v801;
										while true do
											if ((v799 == (1 + 2)) or (2504 >= 3608)) then
												v79[v801] = v800[v81[4]];
												v73 = v73 + (145 - (102 + 42));
												v81 = v69[v73];
												v799 = 4;
											end
											if ((1061 >= 87) and (v799 == ((3094 - (334 + 910)) - (1524 + (1215 - (92 + 803)))))) then
												v79[v81[2]][v81[3]] = v81[1274 - (1049 + 221)];
												break;
											end
											if (v799 == 4) then
												v79[v81[158 - (18 + 138)]] = {};
												v73 = v73 + (2 - 1);
												v81 = v69[v73];
												v799 = 5;
											end
											if ((1107 - (67 + 1035)) == v799) then
												v79[v81[350 - (136 + 212)]][v81[12 - 9]] = v81[3 + 1];
												v73 = v73 + 1;
												v81 = v69[v73];
												v799 = 5 + 1;
											end
											if (v799 == (2 + (1181 - (1035 + 146)))) then
												v801 = v81[1606 - (240 + 1364)];
												v800 = v79[v81[1085 - (1050 + 32)]];
												v79[v801 + (3 - 2)] = v800;
												v799 = 2 + (617 - (230 + 386));
											end
											if ((v799 == (1056 - (331 + 724))) or (1582 >= 3257)) then
												v79[v801](v13(v79, v801 + 1 + 0 + 0, v81[3]));
												v73 = v73 + 1;
												v81 = v69[v73];
												v799 = 646 - (269 + 375);
											end
											if ((1392 <= 2483) and (v799 == (725 - (267 + 458)))) then
												v800 = nil;
												v801 = nil;
												v801 = v81[1 + 1];
												v799 = 1 - 0;
											end
										end
									end
								elseif ((v82 <= (891 - (667 + 151))) or (362 >= 4617)) then
									local v254;
									v79[v81[1499 - (1410 + 87)]][v81[3]] = v79[v81[1901 - (1504 + 393)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[7 - 4]] = v81[1514 - (353 + 1157)];
									v73 = v73 + (797 - (461 + 335));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v62[v81[1764 - (1730 + 31)]];
									v73 = v73 + (1668 - (728 + 939));
									v81 = v69[v73];
									v79[v81[(1120 - (53 + 1061)) - 4]] = v79[v81[3]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v81[1638 - (1568 + 67)];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1070 - (138 + 930)]] = v79[v81[3 + 0]];
									v73 = v73 + 1 + 0 + 0 + 0;
									v81 = v69[v73];
									v254 = v81[2];
									v79[v254] = v79[v254](v13(v79, v254 + 1 + 0, v81[(30 - 18) - 9]));
									v73 = v73 + ((5199 - 3432) - (459 + (3294 - 1987)));
									v81 = v69[v73];
									v79[v81[1872 - (474 + 1396)]] = v79[v81[5 - 2]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v81[1 + 2];
								elseif ((v82 > (211 - (130 + 7))) or (1405 <= 908)) then
									local v802;
									v79[v81[1 + 1]] = v79[v81[9 - 6]][v81[17 - 13]];
									v73 = v73 + (592 - (562 + 29));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[(2634 - (615 + 597)) - (374 + 1045)]][v79[v81[4 + 0]]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[640 - (448 + 190)]] = v79[v81[1 + 2]][v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v61[v81[11 - 8]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1496 - (1307 + 187)]] = v79[v81[11 - 8]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v802 = v81[2];
									v79[v802](v79[v802 + (2 - 1)]);
									v73 = v73 + 1;
									v81 = v69[v73];
									v73 = v81[(8 + 0) - 5];
								else
									v79[v81[685 - (232 + 451)]][v81[3]] = v79[v81[4 + 0]];
								end
							elseif (v82 <= (69 + 9)) then
								if ((v82 <= (640 - (510 + 54))) or (3254 < 1340)) then
									local v274;
									v79[v81[2]] = v79[v81[5 - 2]][v81[40 - (13 + (33 - 10))]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[4 - 1]][v81[1092 - (830 + 258)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v81[10 - 7] / v79[v81[3 + 1]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1443 - (860 + 581)]] = v79[v81[3]] * v81[14 - 10];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[244 - (237 + 4)]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3]][v81[9 - 5]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[3 - (1 + 0)]] = v79[v81[3]] - v79[v81[4 + 0]];
									v73 = v73 + 1 + (1899 - (1056 + 843));
									v81 = v69[v73];
									v274 = v81[7 - (10 - 5)];
									v79[v274] = v79[v274](v13(v79, v274 + 1 + 0, v81[2 + 1]));
									v73 = v73 + (1427 - (85 + 1341));
									v81 = v69[v73];
									v79[v81[2]] = v62[v81[4 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - (4 - 1)]] = v79[v81[375 - (45 + 327)]][v81[7 - 3]];
									v73 = v73 + (503 - (444 + 58));
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[1 + (5 - 3)]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[1735 - (38 + 26 + 1668)]][v81[4]];
									v73 = v73 + (1974 - (1227 + 746));
									v81 = v69[v73];
									v79[v81[5 - 3]] = v79[v81[5 - 2]] / v81[(2474 - (286 + 1690)) - (415 + 79)];
									v73 = v73 + 1 + (911 - (98 + 813));
									v81 = v69[v73];
									v79[v81[493 - (142 + 349)]] = v79[v81[3]] - v79[v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[3 - 0]][v81[4]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1 + 1 + 0]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1866 - ((4147 - 2437) + 154)]] = v79[v81[3]] / v81[322 - (200 + 118)];
									v73 = v73 + 1 + 0 + 0;
									v81 = v69[v73];
									v79[v81[(509 - (263 + 244)) - 0]] = v79[v81[4 - 1]] - v79[v81[4 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v274 = v81[2 + 0];
									v79[v274] = v79[v274](v13(v79, v274 + 1 + 0, v81[6 - 3]));
									v73 = v73 + (1251 - (363 + 887));
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[3]][v81[18 - 14]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[4 - 2]][v81[3 + 0]] = v79[v81[1668 - (674 + 990)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[2 + 1]][v81[6 - 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]][v81[1058 - (402 + 105 + 548)]] = v79[v81[841 - (289 + 548)]];
									v73 = v73 + (1819 - (821 + 997));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[3]][v81[259 - (195 + 60)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1503 - (251 + 1250)]] = v61[v81[8 - 5]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[3]][v81[1036 - (809 + (1910 - (1502 + 185)))]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[9 - 6]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[(119 + 501) - (14 + 603)]][v81[(650 - 517) - (118 + 11)]];
									v73 = v73 + 1 + (0 - 0);
									v81 = v69[v73];
									v79[v81[2 + (1527 - (629 + 898))]][v81[8 - 5]] = v79[v81[4]];
									v73 = v73 + (950 - (551 + 398));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[2 + 1]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[(19 - 12) - 5]][v81[6 - 3]] = v79[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[7 - (12 - 7)]] = v79[v81[1 + 2]][v81[(458 - (12 + 353)) - (40 + 49)]];
									v73 = v73 + ((1914 - (1680 + 231)) - 2);
									v81 = v69[v73];
									v79[v81[2]] = v61[v81[493 - (99 + 391)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[8 - 6]] = v79[v81[7 - 4]][v81[4 + 0]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[1607 - (1032 + 572)]] = v79[v81[421 - (203 + 14 + 200)]];
									v73 = v73 + (1818 - (568 + 1249));
									v81 = v69[v73];
									v79[v81[2 + 0]] = v61[v81[(4 + 2) - 3]];
									v73 = v73 + (1150 - (212 + 937));
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[11 - 8]][v81[(873 + 437) - (913 + (1455 - (111 + 951)))]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[413 - (269 + 141)]][v81[(2 + 6) - 4]];
									v73 = v73 + (1982 - (362 + 1619));
									v81 = v69[v73];
									v79[v81[1627 - (950 + 675)]] = v79[v81[(29 - (18 + 9)) + 1]][v81[4]];
									v73 = v73 + (1180 - (216 + 963));
									v81 = v69[v73];
									v79[v81[1289 - (485 + 802)]] = v79[v81[562 - (432 + 127)]] - v79[v81[(216 + 861) - (1065 + 8)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1603 - (635 + 966)]] = v79[v81[3 + 0]][v81[46 - (5 + (571 - (31 + 503)))]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v62[v81[4 - (1633 - (595 + 1037))]];
									v73 = v73 + (1445 - (189 + 1255)) + 0;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[5 - 2]][v81[15 - 11]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v81[(3 + 4) - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[531 - (318 + 211)]] = v81[(20 - 6) - 11] / v79[v81[1591 - (963 + 624)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v274 = v81[848 - (518 + 328)];
									v79[v274] = v79[v274](v13(v79, v274 + (2 - 1), v81[3 - 0]));
									v73 = v73 + (318 - ((1580 - (1170 + 109)) + 16));
									v81 = v69[v73];
									v79[v81[5 - 3]][v81[8 - 5]] = v79[v81[10 - 6]];
									v73 = v73 + 1 + (1817 - (348 + 1469));
									v81 = v69[v73];
									v79[v81[2]] = v62[v81[2 + 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[3 - 1]] = v79[v81[2 + (1290 - (1115 + 174))]][v81[1 + 3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[1 + 2]][v81[1023 - (829 + 190)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[10 - 7]][v81[4 - 0]];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[7 - (1018 - (85 + 929))]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[8 - 5]] / v81[3 + 1 + 0];
									v73 = v73 + (614 - (520 + 93));
									v81 = v69[v73];
									v79[v81[1869 - (1151 + 716)]] = v79[v81[279 - (259 + 17)]] - v79[v81[1 + 3]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[6 - 4]] = v79[v81[3]] - v79[v81[595 - (396 + 67 + 128)]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v274 = v81[1763 - (440 + 1321)];
									v79[v274] = v79[v274](v13(v79, v274 + ((1786 + 44) - (1059 + 770)), v81[13 - 10]));
									v73 = v73 + (546 - (424 + 121));
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[1350 - (641 + 706)]] = v79[v81[2 + 2]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v61[v81[443 - (249 + 191)]];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v79[v81[1 + 1]] = v79[v81[11 - 8]][v81[431 - (183 + 244)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[732 - (434 + 296)]][v81[9 - 6]] = v79[v81[516 - (169 + (2047 - (95 + 1609)))]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2]] = v61[v81[4 - 1]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[8 - 5]][v81[4 + 0]];
									v73 = v73 + (2 - (3 - 2));
									v81 = v69[v73];
									v79[v81[2]] = v61[v81[3]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[1125 - (651 + 472)]] = v79[v81[3 + 0]][v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									if (v79[v81[2 - 0]] == v79[v81[487 - (397 + 86)]]) then
										v73 = v73 + 1;
									else
										v73 = v81[879 - (423 + 453)];
									end
								elseif (v82 == (8 + 69)) then
									local v818;
									v79[v81[1 + 1]][v81[3 + 0]] = v81[4 + 0];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[(760 - (364 + 394)) + 0]] = v62[v81[1193 - (50 + 1140)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[5 - (1 + 0)]];
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]] = v81[599 - (47 + 110 + 91 + 348)];
									v73 = v73 + (1 - 0);
									v81 = v69[v73];
									v79[v81[6 - 4]] = v81[8 - 5];
									v73 = v73 + (919 - (782 + 136));
									v81 = v69[v73];
									v79[v81[2]] = v81[(698 + 160) - (112 + 743)];
									v73 = v73 + (1172 - (1026 + 145));
									v81 = v69[v73];
									v818 = v81[1 + 0 + 1];
									v79[v818] = v79[v818](v13(v79, v818 + (719 - (493 + 225)), v81[11 - 8]));
									v73 = v73 + 1;
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[7 - 4]] = v79[v81[4]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v61[v81[3]];
									v73 = v73 + 1 + 0 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v79[v81[(602 + 996) - (210 + 1385)]][v81[1693 - (1105 + 96 + 488)]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 + 0]][v81[5 - 2]] = v79[v81[6 - 2]];
									v73 = v73 + (586 - (352 + 233));
									v81 = v69[v73];
									v79[v81[2]] = v81[7 - 4];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v73 = v81[8 - 5];
								else
									local v842 = v81[576 - (489 + (1041 - (719 + 237)))];
									local v843 = v79[v81[1504 - (277 + 1224)]];
									v79[v842 + (1494 - ((1850 - 1187) + 830))] = v843;
									v79[v842] = v843[v81[4 + 0]];
								end
							elseif (v82 <= 79) then
								local v358 = 0 - 0;
								local v359;
								while true do
									if ((2423 <= 4204) and (v358 == 7)) then
										v81 = v69[v73];
										v359 = v81[877 - (461 + 414)];
										v79[v359] = v79[v359](v13(v79, v359 + 1 + 0, v81[2 + 1 + 0]));
										v358 = 8;
									end
									if ((4323 >= 1113) and (v358 == (0 + (0 - 0)))) then
										v359 = nil;
										v79[v81[2]][v81[3 + 0]] = v79[v81[254 - (172 + (219 - 141))]];
										v73 = v73 + (1 - 0);
										v358 = 1 + 0;
									end
									if ((4730 == 4730) and (1 == v358)) then
										v81 = v69[v73];
										v79[v81[2 - 0]][v81[1 + 2]] = v81[2 + 2];
										v73 = v73 + (1 - 0);
										v358 = 2 - (0 - 0);
									end
									if ((((1992 - (761 + 1230)) + 1) == v358) or (4342 < 2137)) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v62[v81[2 + 1]];
										v73 = v73 + 1;
										v358 = 11 - 8;
									end
									if ((18 - 10) == v358) then
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[(195 - (80 + 113)) + 0]][v81[450 - (133 + 314)]] = v79[v81[1 + 3]];
										v358 = 5 + 4;
									end
									if ((222 - (199 + 14)) == v358) then
										v73 = v73 + (3 - 2);
										v81 = v69[v73];
										v79[v81[2]] = {};
										break;
									end
									if (v358 == (1553 - (647 + 902))) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v81[236 - (85 + 148)];
										v73 = v73 + (1290 - (426 + 863));
										v358 = 23 - 18;
									end
									if ((1659 - (873 + 781)) == v358) then
										v81 = v69[v73];
										v79[v81[2 - 0]] = v81[7 - 4];
										v73 = v73 + 1;
										v358 = 3 + 3;
									end
									if ((4986 == 4986) and (v358 == (11 - 8))) then
										v81 = v69[v73];
										v79[v81[2 - 0]] = v79[v81[8 - 5]][v81[1951 - (414 + 1533)]];
										v73 = v73 + 1;
										v358 = 4 + 0;
									end
									if ((561 - (443 + 112)) == v358) then
										v81 = v69[v73];
										v79[v81[1481 - (888 + 591)]] = v81[(5 + 2) - 4];
										v73 = v73 + 1 + 0;
										v358 = 26 - 19;
									end
								end
							elseif ((v82 > (32 + 48)) or (4757 == 3457)) then
								local v847 = 0 + 0;
								local v848;
								local v849;
								local v850;
								while true do
									if ((2509 == 2509) and (v847 == (1 + 0))) then
										v850 = 0 - 0;
										for v1515 = v848, v81[6 - 2] do
											local v1516 = 1678 - (136 + 46 + 1496);
											while true do
												if (v1516 == (0 - 0)) then
													v850 = v850 + (3 - 2);
													v79[v1515] = v849[v850];
													break;
												end
											end
										end
										break;
									end
									if (v847 == (0 + 0)) then
										v848 = v81[(1 + 1) - 0];
										v849 = {v79[v848](v13(v79, v848 + (487 - (68 + 418)), v81[8 - 5]))};
										v847 = 1 - (1243 - (965 + 278));
									end
								end
							else
								local v851;
								local v852;
								local v851, v853;
								local v854;
								local v855;
								v79[v81[2 + 0]] = v79[v81[1095 - ((2499 - (1391 + 338)) + 322)]][v81[1 + 3]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v855 = v81[1 + 1];
								v854 = v79[v81[3 - 0]];
								v79[v855 + 1] = v854;
								v79[v855] = v854[v81[(17 - 10) - 3]];
								v73 = v73 + (2 - 1);
								v81 = v69[v73];
								v855 = v81[(7 + 0) - 5];
								v851, v853 = v72(v79[v855](v79[v855 + 1 + 0]));
								v74 = (v853 + v855) - 1;
								v852 = 0 - 0;
								for v1140 = v855, v74 do
									local v1141 = (0 - 0) + 0;
									while true do
										if ((0 + 0) == v1141) then
											v852 = v852 + 1 + 0;
											v79[v1140] = v851[v852];
											break;
										end
									end
								end
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v855 = v81[(1 + 1) - 0];
								v851 = {v79[v855](v13(v79, v855 + 1 + 0, v74))};
								v852 = 0 - 0;
								for v1142 = v855, v81[(4 + 9) - 9] do
									local v1143 = 0 + 0;
									while true do
										if ((2806 == 2806) and (v1143 == (0 - 0))) then
											v852 = v852 + 1;
											v79[v1142] = v851[v852];
											break;
										end
									end
								end
								v73 = v73 + (832 - (762 + 69));
								v81 = v69[v73];
								v73 = v81[9 - 6];
							end
						elseif ((v82 <= (75 + 12)) or (2341 >= 4872)) then
							if (v82 <= (55 + 29)) then
								if ((3479 <= 3969) and (v82 <= (198 - 116))) then
									v79[v81[(1 - 0) + (1331 - (1190 + 140))]] = v29(v70[v81[1 + 2]], nil, v62);
								elseif ((1117 <= 2699) and (v82 > (323 - 240))) then
									local v867 = 0;
									local v868;
									local v869;
									while true do
										if (v867 == (162 - (8 + 149))) then
											v81 = v69[v73];
											v79[v81[1322 - (1199 + 121)]] = v62[v81[3]];
											v73 = v73 + (1 - 0);
											v81 = v69[v73];
											v867 = 13 - 7;
										end
										if ((2270 == 2270) and (7 == v867)) then
											v73 = v73 + 1;
											v81 = v69[v73];
											v79[v81[1 + 1]] = v81[10 - 7];
											v73 = v73 + (2 - 1);
											v867 = 8 + 0;
										end
										if (v867 == (1809 - (518 + 620 + 669))) then
											v81 = v69[v73];
											v869 = v81[2 - 0];
											v868 = v79[v81[1 + 2]];
											v79[v869 + (1 - 0)] = v868;
											v867 = 3 + 0;
										end
										if (v867 == 0) then
											v868 = nil;
											v869 = nil;
											v79[v81[471 - (304 + 165)]][v81[(721 - (317 + 401)) + 0]] = v79[v81[164 - (54 + 106)]];
											v73 = v73 + (1970 - (1618 + (1300 - (303 + 646))));
											v867 = 1 + 0;
										end
										if (v867 == ((3618 - 2598) - (10 + 1006))) then
											v73 = v73 + 1 + (1732 - (1675 + 57));
											v81 = v69[v73];
											v79[v81[1 + 1]][v81[9 - 6]] = v81[1037 - (912 + 121)];
											v73 = v73 + 1 + 0;
											v867 = 1294 - (1140 + 149);
										end
										if ((1 + 0) == v867) then
											v81 = v69[v73];
											v869 = v81[2 - 0];
											v79[v869](v13(v79, v869 + 1 + 0, v81[10 - 7]));
											v73 = v73 + 1;
											v867 = 3 - 1;
										end
										if (v867 == (2 + 6)) then
											v81 = v69[v73];
											v79[v81[6 - 4]] = v81[3];
											break;
										end
										if (v867 == (189 - (165 + 21))) then
											v79[v869] = v868[v81[4]];
											v73 = v73 + (112 - (61 + 50));
											v81 = v69[v73];
											v79[v81[1 + 1]] = {};
											v867 = 19 - 15;
										end
										if (v867 == (11 - (4 + 1))) then
											v79[v81[1 + 1]] = v79[v81[1463 - (1295 + 165)]][v81[1 + 3]];
											v73 = v73 + 1 + 0;
											v81 = v69[v73];
											v79[v81[1399 - (819 + 578)]] = v81[1405 - (331 + 1071)];
											v867 = 750 - ((1536 - 948) + 20 + 135);
										end
									end
								else
									local v870;
									v79[v81[1284 - (546 + 736)]] = {};
									v73 = v73 + (1938 - (1834 + 103));
									v81 = v69[v73];
									v79[v81[2]][v81[2 + 1]] = v79[v81[11 - 7]];
									v73 = v73 + (1767 - (1536 + 230));
									v81 = v69[v73];
									v79[v81[2]] = {};
									v73 = v73 + (492 - (128 + 363));
									v81 = v69[v73];
									v79[v81[1 + 1]][v81[3]] = v79[v81[(986 - (338 + 639)) - 5]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[2 - 0]] = v62[v81[8 - 5]];
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2 + 0]] = v79[v81[1012 - (615 + (773 - (320 + 59)))]][v81[3 + 1 + 0]];
									v73 = v73 + 1 + 0;
									v81 = v69[v73];
									v79[v81[5 - 3]] = v81[3];
									v73 = v73 + (4 - 3);
									v81 = v69[v73];
									v870 = v81[2];
									v79[v870] = v79[v870](v79[v870 + (652 - (59 + (1324 - (628 + 104))))]);
									v73 = v73 + (2 - 1);
									v81 = v69[v73];
									v79[v81[2]] = v79[v81[4 - 1]][v81[3 + 1]];
									v73 = v73 + (172 - ((86 - 16) + 101));
									v81 = v69[v73];
									v79[v81[4 - 2]][v81[3]] = v79[v81[4]];
								end
							elseif (v82 <= 85) then
								for v390 = v81[2 + 0], v81[(1898 - (439 + 1452)) - 4] do
									v79[v390] = nil;
								end
							elseif (v82 == (327 - (123 + 118))) then
								local v889 = 0 + 0;
								local v890;
								local v891;
								while true do
									if ((v889 == (1 + (1949 - (105 + 1842)))) or (3965 < 765)) then
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[1401 - (653 + 746)]] = v81[4 - 1];
										v889 = 4;
									end
									if (v889 == 5) then
										v79[v891] = v79[v891](v13(v79, v891 + (1 - 0), v81[13 - 10]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v889 = 3 + 3;
									end
									if (v889 == (0 + 0)) then
										v890 = nil;
										v891 = nil;
										v79[v81[2 + 0]] = v79[v81[1 + 2]][v81[4]];
										v889 = 1 + 0;
									end
									if ((v889 == 2) or (1814 > 2412)) then
										v890 = v79[v81[7 - 4]];
										v79[v891 + 1] = v890;
										v79[v891] = v890[v81[4]];
										v889 = 3 + (0 - 0);
									end
									if ((2844 >= 2493) and (v889 == (7 - 3))) then
										v73 = v73 + ((5943 - 4708) - (885 + 349));
										v81 = v69[v73];
										v891 = v81[2 + 0];
										v889 = 5;
									end
									if (v889 == (1 + 0)) then
										v73 = v73 + (2 - (1 - 0));
										v81 = v69[v73];
										v891 = v81[5 - 3];
										v889 = 2;
									end
									if (v889 == (974 - (474 + 441 + 53))) then
										if v79[v81[803 - (768 + (1197 - (274 + 890)))]] then
											v73 = v73 + (3 - 2);
										else
											v73 = v81[5 - (2 + 0)];
										end
										break;
									end
								end
							else
								local v892;
								v79[v81[2]] = v61[v81[331 - (287 + 41)]];
								v73 = v73 + (848 - (638 + 209));
								v81 = v69[v73];
								v79[v81[2 + 0]] = v79[v81[3]][v81[1690 - (81 + 15 + 1590)]];
								v73 = v73 + (1673 - (741 + 931));
								v81 = v69[v73];
								v79[v81[1 + 1]][v81[8 - 5]] = v79[v81[18 - 14]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1 + 1]] = v62[v81[1 + 2]];
								v73 = v73 + (3 - 2);
								v81 = v69[v73];
								v79[v81[1 + 1]] = v79[v81[3]][v81[4]];
								v73 = v73 + 1 + 0 + 0;
								v81 = v69[v73];
								v79[v81[8 - 6]] = v81[3 + 0];
								v73 = v73 + (495 - (64 + 430));
								v81 = v69[v73];
								v892 = v81[2];
								v79[v892] = v79[v892](v79[v892 + 1 + 0]);
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]] = v79[v81[366 - (106 + 257)]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[723 - (496 + 225)]] = v61[v81[5 - 2]];
								v73 = v73 + (4 - 3);
								v81 = v69[v73];
								v79[v81[1660 - (256 + 1402)]] = v79[v81[1902 - (30 + 1016 + 853)]][v81[4]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v81[3]] = v79[v81[4]];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[1371 - (213 + (1633 - 477))]] = v81[191 - ((915 - (731 + 88)) + 92)];
							end
						elseif ((3553 > 3215) and (v82 <= (16 + 74))) then
							if ((v82 <= (987 - (142 + 757))) or (1785 >= 2905)) then
								local v361;
								v79[v81[2 + 0]] = v81[3];
								v73 = v73 + 1 + 0;
								v81 = v69[v73];
								v79[v81[81 - (32 + 47)]] = v81[(1584 + 396) - (1053 + 567 + 357)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v361 = v81[2];
								v79[v361] = v79[v361](v13(v79, v361 + 1 + 0, v81[4 - 1]));
								v73 = v73 + (1649 - (685 + 963));
								v81 = v69[v73];
								v79[v81[2]][v81[3]] = v79[v81[7 - 3]];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2 - 0]][v81[1712 - (116 + 425 + 1168)]] = v81[1601 - (645 + 952)];
								v73 = v73 + 1;
								v81 = v69[v73];
								v79[v81[2]][v81[841 - (669 + 169)]] = v81[13 - (12 - 3)];
							elseif (v82 == 89) then
								local v916 = 0 - 0;
								local v917;
								local v918;
								local v919;
								local v920;
								while true do
									if (v916 == ((2 - 1) + 0)) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v61[v81[1 + 2]];
										v73 = v73 + (766 - (181 + 584));
										v81 = v69[v73];
										v79[v81[2]] = v79[v81[1398 - (665 + (1516 - 786))]][v81[4]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[(1 + 4) - 3]] = v79[v81[5 - 2]][v81[1354 - (540 + 810)]];
										v73 = v73 + (3 - 2);
										v916 = 5 - 3;
									end
									if (v916 == (1 + 3)) then
										v81 = v69[v73];
										v79[v81[2]] = v61[v81[3 + 0 + 0]];
										v73 = v73 + ((362 - (139 + 19)) - (166 + 37));
										v81 = v69[v73];
										v920 = v81[(336 + 1547) - (22 + 1859)];
										v919 = v79[v81[3]];
										v79[v920 + (1773 - (843 + 929))] = v919;
										v79[v920] = v919[v81[4]];
										v73 = v73 + (263 - (30 + 232));
										v916 = 5;
									end
									if (v916 == (1995 - (1687 + 306))) then
										v81 = v69[v73];
										v79[v81[5 - 3]] = v61[v81[780 - (55 + 722)]];
										v73 = v73 + (1 - (0 - 0));
										v81 = v69[v73];
										v920 = v81[1677 - (78 + 1597)];
										v919 = v79[v81[1 + 2]];
										v79[v920 + 1 + 0] = v919;
										v79[v920] = v919[v81[4 + 0]];
										v73 = v73 + (550 - (305 + 244));
										v916 = 3 + 0;
									end
									if ((117 - (95 + 10)) == v916) then
										v81 = v69[v73];
										v920 = v81[2 + 0];
										v79[v920] = v79[v920](v13(v79, v920 + (3 - (1156 - (1018 + 136))), v81[3 - 0]));
										v73 = v73 + (763 - (592 + 23 + 147));
										v81 = v69[v73];
										if v79[v81[2]] then
											v73 = v73 + 1;
										else
											v73 = v81[10 - 7];
										end
										break;
									end
									if ((7 - (17 - 13)) == v916) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[2 + 1]][v81[819 - (117 + 698)]];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v920 = v81[2];
										v918 = {v79[v920](v13(v79, v920 + (1 - 0), v81[510 - (353 + 154)]))};
										v917 = 0 - 0;
										for v1521 = v920, v81[4] do
											v917 = v917 + (1 - 0);
											v79[v1521] = v918[v917];
										end
										v73 = v73 + 1 + 0 + 0;
										v916 = 4;
									end
									if ((4 + 1) == v916) then
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[3]][v81[5 - (1 + 0)]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[3 - 1]] = v62[v81[3]];
										v73 = v73 + (2 - (1 - 0));
										v81 = v69[v73];
										v79[v81[88 - (7 + 79)]] = v79[v81[3]][v81[2 + 2]];
										v73 = v73 + (182 - (24 + 147 + 10));
										v916 = 11 - 5;
									end
									if ((2132 < 2323) and (v916 == ((23 - 9) - (15 - 8)))) then
										v81 = v69[v73];
										v920 = v81[2];
										v79[v920] = v79[v920](v13(v79, v920 + 1 + 0, v81[3]));
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[382 - (262 + 118)]] = v79[v81[(1885 - 799) - (1038 + 45)]] + v79[v81[8 - 4]];
										v73 = v73 + (231 - (19 + 211));
										v81 = v69[v73];
										v920 = v81[115 - (88 + 25)];
										v916 = 20 - 12;
									end
									if (v916 == (4 + 4)) then
										v79[v920] = v79[v920](v13(v79, v920 + 1 + 0, v81[(1299 - (159 + 101)) - (1007 + (139 - 110))]));
										v73 = v73 + (3 - 2) + 0;
										v81 = v69[v73];
										v79[v81[2]] = v61[v81[7 - 4]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v920 = v81[9 - 7];
										v919 = v79[v81[1 + 2]];
										v79[v920 + (812 - (340 + 471))] = v919;
										v916 = 22 - 13;
									end
									if (v916 == 0) then
										v917 = nil;
										v918 = nil;
										v919 = nil;
										v920 = nil;
										v79[v81[2]] = v79[v81[592 - (276 + 313)]][v81[9 - (3 + 2)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[1 + 1]] = v79[v81[1 + 2]][v81[1976 - (495 + 1477)]];
										v73 = v73 + (2 - 1);
										v916 = 1 + 0;
									end
									if (v916 == (412 - (342 + 61))) then
										v79[v920] = v919[v81[(6 - 4) + 2]];
										v73 = v73 + (166 - (4 + 161));
										v81 = v69[v73];
										v79[v81[2 + 0]] = v79[v81[9 - 6]][v81[(19 - 9) - 6]];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[499 - (322 + 175)]] = v62[v81[566 - (173 + 390)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v916 = 324 - (203 + 111);
									end
									if ((1393 < 2619) and (v916 == 6)) then
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3 + 0];
										v73 = v73 + (2 - 1);
										v81 = v69[v73];
										v79[v81[1 + 1 + 0]] = v81[709 - (57 + 649)];
										v73 = v73 + (385 - (328 + 56));
										v81 = v69[v73];
										v79[v81[1 + 1]] = v81[3];
										v73 = v73 + 1;
										v916 = 519 - (433 + 79);
									end
									if ((v916 == ((268 - (112 + 154)) + 9)) or (835 > 1188)) then
										v79[v81[2 + 0]] = v81[9 - 6];
										v73 = v73 + 1;
										v81 = v69[v73];
										v920 = v81[9 - 7];
										v79[v920] = v79[v920](v13(v79, v920 + 1 + 0, v81[3]));
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[(2407 - 1369) - (562 + 474)]] = v79[v81[34 - (21 + 10)]] - v79[v81[9 - (1724 - (531 + 1188))]];
										v73 = v73 + (1 - 0);
										v916 = 12;
									end
									if ((3157 > 1265) and (v916 == ((783 + 132) - (76 + 829)))) then
										v79[v81[1675 - (1506 + 167)]] = v79[v81[5 - 2]][v81[270 - (58 + 208)]];
										v73 = v73 + 1 + 0;
										v81 = v69[v73];
										v79[v81[2 + 0]] = v81[2 + 1];
										v73 = v73 + 1;
										v81 = v69[v73];
										v79[v81[(670 - (96 + 567)) - 5]] = v81[340 - (258 + 79)];
										v73 = v73 + 1;
										v81 = v69[v73];
										v916 = 2 + 9;
									end
								end
							else
								local v921 = v81[2];
								local v922 = v81[4];
								local v923 = v921 + (3 - (1 - 0));
								local v924 = {v79[v921](v79[v921 + (1471 - (1219 + 251))], v79[v923])};
								for v1144 = 1672 - (1231 + 440), v922 do
									v79[v923 + v1144] = v924[v1144];
								end
								local v925 = v924[1];
								if v925 then
									v79[v923] = v925;
									v73 = v81[61 - (34 + 24)];
								else
									v73 = v73 + 1;
								end
							end
						elseif (v82 <= (53 + 38)) then
							local v375 = (0 + 0) - 0;
							local v376;
							local v377;
							local v378;
							while true do
								if ((1 + 0) == v375) then
									v378 = {};
									v377 = v10({}, {__index=function(v1164, v1165)
										local v1166 = 0;
										local v1167;
										while true do
											if (v1166 == 0) then
												v1167 = v378[v1165];
												return v1167[3 - 2][v1167[5 - 3]];
											end
										end
									end,__newindex=function(v1168, v1169, v1170)
										local v1171 = 0;
										local v1172;
										while true do
											if ((v1171 == (0 - 0)) or (269 >= 4929)) then
												v1172 = v378[v1169];
												v1172[1][v1172[2]] = v1170;
												break;
											end
										end
									end});
									v375 = 5 - 3;
								end
								if (v375 == (0 - (1695 - (867 + 828)))) then
									v376 = v70[v81[6 - 3]];
									v377 = nil;
									v375 = (3478 - 1888) - (877 + 712);
								end
								if (v375 == (2 + 0)) then
									for v1173 = 755 - (242 + 512), v81[8 - 4] do
										local v1174 = 627 - (92 + 535);
										local v1175;
										while true do
											if ((1126 < 3833) and (v1174 == (1 + 0))) then
												if ((3587 > 2738) and (v1175[1 - 0] == (4 + 55))) then
													v378[v1173 - (3 - 2)] = {v79,v1175[3 + 0]};
												else
													v378[v1173 - (3 - 2)] = {v61,v1175[1 + 2]};
												end
												v78[#v78 + (1 - 0)] = v378;
												break;
											end
											if (v1174 == ((0 - 0) - 0)) then
												v73 = v73 + (1786 - (1476 + 309));
												v1175 = v69[v73];
												v1174 = 1285 - (299 + 985);
											end
										end
									end
									v79[v81[1 + 1]] = v29(v376, v377, v62);
									break;
								end
							end
						elseif (v82 == (301 - 209)) then
							local v926 = v81[95 - (86 + 7)];
							local v927 = {v79[v926](v13(v79, v926 + 1 + 0, v74))};
							local v928 = 880 - (293 + 379 + 208);
							for v1149 = v926, v81[2 + 2] do
								local v1150 = 132 - (14 + 118);
								while true do
									if (v1150 == (445 - (339 + 106))) then
										v928 = v928 + 1 + (0 - 0);
										v79[v1149] = v927[v928];
										break;
									end
								end
							end
						elseif (v79[v81[2 + 0]] == v81[1399 - ((1211 - (134 + 637)) + 955)]) then
							v73 = v73 + 1 + 0;
						else
							v73 = v81[(1 + 3) - 1];
						end
						v73 = v73 + 1;
						break;
					end
					if (v91 == (1157 - (775 + 382))) then
						v81 = v69[v73];
						v82 = v81[1 + 0];
						v91 = 2 - 1;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
